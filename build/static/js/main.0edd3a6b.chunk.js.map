{"version":3,"sources":["Configuration/ThemeSelectorForm.js","Configuration/Review.js","Configuration/BlindtestCustomizerForm.js","Copyright.js","Configuration/Checkout.js","Database/FirebaseConfig.js","Database/DtoAsset.js","Database/DtoSuggestion.js","Database/AssetsManager.js","Generator/SelectionGenerator.js","Session/KeyboardEvent.js","Session/BlindtestGenerator.js","Home/HomePage.js","Home/ContributorsPage.js","Home/AssetsPage.js","Home/SuggestPage.js","Home/AdminSuggestionPage.js","RoutingConfig.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeSelectorForm","props","theme","window","localStorage","getItem","defaultTheme","state","opened","classes","makeStyles","button","display","marginTop","spacing","select","backgroundColor","borderColor","icon","fill","formControl","margin","minWidth","setOpen","bind","handleOpen","handleClose","handleChange","event","setItem","target","value","this","setState","Fragment","Typography","variant","gutterBottom","align","style","color","Box","FormControl","Select","labelId","id","open","onClose","onOpen","onChange","defaultValue","inputProps","MenuItem","React","Component","ThemeList","games","animes","films","all","getTheme","key","allowSameLicence","getFormattedPlaylistSize","playlistSize","getFormattedGuessTime","guessTime","waitTime","Review","Grid","container","item","xs","GreenSwitch","withStyles","switchBase","checked","track","Switch","CustomSlider","root","height","borderRadius","thumb","width","border","boxShadow","active","Slider","BlindtestCustomizerForm","parseInt","defaultplaylistSize","defaultGuessTime","defaultWaitTime","updatePlaylistSize","updateGuessTime","updateWaitTime","handleSwitchChange","newPlaylistSize","toString","actualGuessTime","newGuessTime","innerText","actualWaitTime","newWaitTime","component","FormGroup","FormLabel","TextField","type","min","textAlign","name","marginBottom","getAriaValueText","valuetext","aria-labelledby","valueLabelDisplay","step","marks","max","Copyright","position","bottom","left","transform","Link","href","Date","getFullYear","QontoConnector","alternativeLabel","top","right","completed","line","borderTopWidth","StepConnector","useQontoStepIconStyles","alignItems","circle","zIndex","fontSize","QontoStepIcon","className","clsx","steps","Checkout","activeStep","anchorEl","openedHelp","setActiveStep","setAnchorEl","handleMenu","handleBack","handleNext","startBlindtest","navigateToMenu","Error","v4","history","push","anchor","Boolean","currentTarget","overflow","Helmet","bodyAttributes","CssBaseline","AppBar","flex","Toolbar","Button","onClick","noWrap","marginLeft","IconButton","edge","aria-label","aria-controls","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","List","ListItem","Stepper","connector","map","label","Step","StepLabel","StepIconComponent","getStepContent","length","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","DtoAsset","obj","url","uid","AssetsManager","collectionName","assetList","firestore","collection","get","then","doc","docs","forEach","element","data","assets","asset","set","DtoSuggestion","suggestion","validate","concat","toJson","catch","err","delete","getAssetsOfCollection","random","Random","MersenneTwister19937","autoSeed","GenerateSelectionFromJSON","size","reuseGame","shuffle","flatMappedAssets","link","split","start","flat","FlatMapAssets","slice","winnerChoice","KeyboardEvents","HandleVolumeDown","player","volume","getVolume","setVolume","HandleVolumeUp","HandlePause","status","getPlayerState","pauseVideo","playVideo","Status","BlindtestGenerator","_onReady","playerObj","console","log","_onPlay","loaded","playlistIndex","_onEnd","stopVideo","_onError","alert","currMusic","error","_onStateChange","updatePlayer","shift","timeoutCounter","Promise","resolve","reject","playlist","music","opt","screen","playerVars","autoplay","end","answerTime","fs","origin","location","videoId","opts","onReady","onPlay","onEnd","onError","onStateChange","timer","setInterval","clearInterval","doneAction","nextGuess","counter","checkStatus","sessionId","undefined","stop","startGuessTime","startAnswerTime","handleKeyDown","fontWeight","handleKeys","onKeyEvent","containerController","flexDirection","buttonStyle","customColor","HomePage","navigateToCheckout","navigateToAssets","navigateToContributors","ContributorsPage","maxWidth","maxHeight","listSection","ul","padding","AssetsPage","onListSearchUpdate","navigateToSuggest","newWindow","opener","stateObject","returnObj","toLowerCase","associatedKey","subheader","redirectToUrl","ListItemText","primary","associatedValue","Autocomplete","options","getOptionLabel","option","renderInput","params","renderAssetList","renderAssetSearch","SuggestPage","assetName","urlList","submitSuggestion","onAssetSearchChange","onAssetSubmitChange","onAddUrl","onRemoveUrl","onChangeUrl","index","splice","isLink","freeSolo","onInput","startIcon","suggestNewAsset","renderUrlList","AdminSuggestionPage","handleSuggestion","HandleSuggestion","getSuggestions","RoutingConfig","basename","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0edd3a6b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport default class ThemeSelectorForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const theme = window.localStorage.getItem('theme')\r\n\r\n        this.defaultTheme = theme ? theme : 'games'\r\n\r\n        this.state = {\r\n            opened: false,\r\n            theme: this.defaultTheme,\r\n            classes:  makeStyles((theme) => ({\r\n                button: {\r\n                    display: 'block',\r\n                    marginTop: theme.spacing(2),\r\n                },\r\n                select: {\r\n                    backgroundColor: 'white',\r\n                    '&:before': {\r\n                        borderColor: '#eaeaf0',\r\n                    },\r\n                    '&:after': {\r\n                        borderColor: '#0FDC06',\r\n                    }\r\n                },\r\n                icon: {\r\n                    fill: '#0FDC06',\r\n                },\r\n                formControl: {\r\n                    margin: theme.spacing(1),\r\n                    minWidth: 120,\r\n                },\r\n            }))\r\n        }\r\n\r\n        this.setOpen = this.setOpen.bind(this);\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        window.localStorage.setItem('theme', event.target.value);\r\n        this.setState({\r\n            theme: event.target.value\r\n        })\r\n    };\r\n\r\n    setOpen(state) {\r\n        this.setState({\r\n            opened: state\r\n        })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setOpen(false);\r\n    }\r\n\r\n    handleOpen() {\r\n        this.setOpen(true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom align='center' style={{ color: 'white'}}>\r\n                    Select Theme\r\n                </Typography>\r\n                <Box align='center'>\r\n                    <FormControl style={{ marginTop: '10%', minWidth: 300 }}>\r\n                        <Select\r\n                            labelId=\"demo-controlled-open-select-label\"\r\n                            id=\"demo-controlled-open-select\"\r\n                            open={this.state.open}\r\n                            onClose={this.handleClose}\r\n                            onOpen={this.handleOpen}\r\n                            value={this.state.theme}\r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.defaultTheme}\r\n                            style={{ color: '#ffffff'}}\r\n                            inputProps={{\r\n                                style: {\r\n                                    color: 'white'\r\n                                },\r\n                                classes: {\r\n                                    icon: this.state.classes.icon\r\n                                }\r\n                            }}\r\n                        >\r\n                            <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                            <MenuItem value='games'>Video Games</MenuItem>\r\n                            <MenuItem value='animes'>Anime</MenuItem>\r\n                            <MenuItem value='films'>Films</MenuItem>\r\n                            <MenuItem value='all'>All Genre</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Typography,\r\n    Grid\r\n} from \"@material-ui/core\"\r\n\r\nconst ThemeList = {\r\n    games: \"Video Games\",\r\n    animes: \"Animes\",\r\n    films: \"Movies\",\r\n    all: \"All Genre\"\r\n}\r\n\r\nfunction getTheme() {\r\n    const key = window.localStorage.getItem('theme')\r\n    const allowSameLicence = (window.localStorage.getItem('allow_same_licence') === 'true')\r\n\r\n    const result = `${ThemeList[key]} (${allowSameLicence ? 'Multiple selection per Licence' : 'One selection per Licence'})`\r\n    return result;\r\n}\r\n\r\nfunction getFormattedPlaylistSize() {\r\n    const playlistSize = window.localStorage.getItem('playlist_size');\r\n\r\n    return `${playlistSize} elements in this playlist`;\r\n}\r\n\r\nfunction getFormattedGuessTime() {\r\n    const guessTime = window.localStorage.getItem('guess_time');\r\n    const waitTime = window.localStorage.getItem('wait_time');\r\n\r\n    return `${guessTime} sec to guess then ${waitTime} before next guess`;\r\n}\r\n\r\nexport default function Review() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom align='center' style={{ color: 'white' }}>\r\n                Configuration summary\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom align='center'>\r\n                <Grid container spacing={5} style={{ marginTop: '5%' }}>\r\n                    <React.Fragment key=\"Theme\">\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>Theme</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>{getTheme()}</Typography>\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                    <React.Fragment key=\"Size of Playlist\">\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>Size of Playlist</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>{getFormattedPlaylistSize()}</Typography>\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                    <React.Fragment key=\"Guess Time\">\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>Guess/Answer Time</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>{getFormattedGuessTime()}</Typography>\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                </Grid>\r\n            </Typography>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    TextField,\r\n    FormControl,\r\n    Slider,\r\n    Box,\r\n    FormLabel,\r\n    Switch,\r\n    FormGroup\r\n} from \"@material-ui/core\"\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst GreenSwitch = withStyles({\r\n    switchBase: {\r\n        color: '#0CB804',\r\n        '&$checked': {\r\n            color: '#0CB804',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#48DF40',\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst CustomSlider = withStyles({\r\n    root: {\r\n        color: \"#137E0E\"\r\n    },\r\n    track: {\r\n        height: 3,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        height: 15,\r\n        width: 15,\r\n        backgroundColor: \"#0CB804\",\r\n        border: \"2px solid currentColor\",\r\n        \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"#137E0E 0 2px 3px 1px\",\r\n        },\r\n        color: \"#0CB804\",\r\n    },\r\n    active: {}\r\n})(Slider);\r\n\r\nexport default class BlindtestCustomizerForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const playlistSize = parseInt(window.localStorage.getItem('playlist_size'))\r\n        const guessTime = parseInt(window.localStorage.getItem('guess_time'))\r\n        const waitTime = parseInt(window.localStorage.getItem('wait_time'))\r\n        const allowSameLicence = (window.localStorage.getItem('allow_same_licence') === 'true')\r\n\r\n        this.defaultplaylistSize = playlistSize ? playlistSize : 100\r\n        this.defaultGuessTime = guessTime ? guessTime : 13\r\n        this.defaultWaitTime = waitTime ? waitTime : 5\r\n\r\n        this.state = {\r\n            opened: false,\r\n            playlistSize: this.defaultplaylistSize,\r\n            guessTime: this.defaultGuessTime,\r\n            waitTime: this.defaultWaitTime,\r\n            allowSameLicence: allowSameLicence,\r\n            classes:  makeStyles((theme) => ({\r\n                formControl: {\r\n                    margin: theme.spacing(1),\r\n                    minWidth: 120,\r\n                }\r\n            }))\r\n        }\r\n\r\n        this.updatePlaylistSize = this.updatePlaylistSize.bind(this);\r\n        this.updateGuessTime = this.updateGuessTime.bind(this);\r\n        this.updateWaitTime = this.updateWaitTime.bind(this);\r\n        this.handleSwitchChange = this.handleSwitchChange.bind(this);\r\n    }\r\n\r\n    valuetext(value) {\r\n        return `${value}`;\r\n    }\r\n\r\n    updatePlaylistSize(event) {\r\n        const newPlaylistSize = parseInt(event.target.value)\r\n\r\n        if (!newPlaylistSize) {\r\n            window.localStorage.setItem('playlist_size', '0');\r\n        }\r\n        this.setState({\r\n            playlistSize: newPlaylistSize\r\n        })\r\n        window.localStorage.setItem('playlist_size', !newPlaylistSize ? '0' : newPlaylistSize.toString())\r\n    }\r\n\r\n    updateGuessTime(event) {\r\n        const actualGuessTime = this.state.guessTime\r\n        const newGuessTime = parseInt(event.target.innerText)\r\n\r\n        if (newGuessTime && actualGuessTime !== newGuessTime) {\r\n            this.setState({\r\n                guessTime: newGuessTime\r\n            })\r\n            window.localStorage.setItem('guess_time', newGuessTime.toString());\r\n        }\r\n    }\r\n\r\n    updateWaitTime(event) {\r\n        const actualWaitTime = this.state.waitTime\r\n        const newWaitTime = parseInt(event.target.innerText)\r\n\r\n\r\n        if (newWaitTime && actualWaitTime !== newWaitTime) {\r\n            this.setState({\r\n                waitTime: newWaitTime\r\n            })\r\n            window.localStorage.setItem('wait_time', newWaitTime.toString());\r\n        }\r\n    }\r\n\r\n    handleSwitchChange(event) {\r\n        window.localStorage.setItem('allow_same_licence', event.target.checked.toString())\r\n        this.setState({\r\n            allowSameLicence: event.target.checked\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" align='center' style={{ color: 'white' }}>\r\n                    Customize Blindtest\r\n                </Typography>\r\n                <Box align='center'>\r\n                    <FormControl component=\"fieldset\" style={{ marginTop: '5%' }}>\r\n                        <FormGroup>\r\n                            <FormLabel component=\"legend\" style={{ color: '#DCDDDC' }}>\r\n                                Size of Playlist\r\n                            </FormLabel>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                inputProps={{min: 0, style: { textAlign: 'center', color: 'white' }}}\r\n                                value={this.state.playlistSize}\r\n                                onChange={this.updatePlaylistSize}\r\n                                name=\"numberformat\"\r\n                                id=\"formatted-numberformat-input\"\r\n\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <FormLabel component=\"legend\" style={{ marginBottom: '40px', marginTop: '40px', color: '#DCDDDC' }}>\r\n                                Guess Time\r\n                            </FormLabel>\r\n                            <CustomSlider\r\n                                defaultValue={this.defaultGuessTime}\r\n                                onChange={this.updateGuessTime}\r\n                                getAriaValueText={this.valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"on\"\r\n                                step={1}\r\n                                marks\r\n                                min={5}\r\n                                max={20}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <FormLabel component=\"legend\" style={{ marginBottom: '40px', marginTop: '40px', color: '#DCDDDC' }}>\r\n                                Time before next Guess\r\n                            </FormLabel>\r\n                            <CustomSlider\r\n                                defaultValue={this.defaultWaitTime}\r\n                                onChange={this.updateWaitTime}\r\n                                getAriaValueText={this.valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"on\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={10}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <FormLabel component=\"legend\" style={{ marginTop: '40px', color: '#DCDDDC' }}>Allow multiple selection per Licence</FormLabel>\r\n                            <Box align='center'>\r\n                                <GreenSwitch checked={this.state.allowSameLicence} onChange={this.handleSwitchChange} name=\"allow-same_licence\"/>\r\n                            </Box>\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import {Link, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function Copyright() {\r\n    return (\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: '10px',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" style={{\r\n                backgroundColor: '#282D35',\r\n                color: 'white'\r\n            }}>\r\n                {'v4.4 - Copyright © '}\r\n                <Link color=\"inherit\" href=\"https://github.com/Emolitt/blindtest-generator\" target='_blank'>\r\n                    Emolitt\r\n                </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport ThemeSelectorForm from './ThemeSelectorForm';\r\nimport Review from './Review';\r\nimport clsx from \"clsx\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport PropTypes from \"prop-types\";\r\nimport BlindtestCustomizerForm from \"./BlindtestCustomizerForm\";\r\nimport HelpIcon from \"@material-ui/icons/Help\"\r\nimport { v4 } from 'uuid';\r\n\r\nimport {\r\n    CssBaseline,\r\n    AppBar,\r\n    Toolbar,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Button,\r\n    Typography,\r\n    Box,\r\n    StepConnector,\r\n    List,\r\n    ListItem,\r\n    Menu,\r\n    IconButton\r\n} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\n//Progress Bar\r\nconst QontoConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 10,\r\n        left: 'calc(-50% + 16px)',\r\n        right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            borderColor: '#0FDC06',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            borderColor: '#0FDC06',\r\n        },\r\n    },\r\n    line: {\r\n        borderColor: '#eaeaf0',\r\n        borderTopWidth: 3,\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n        color: '#eaeaf0',\r\n        display: 'flex',\r\n        height: 22,\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        color: '#0FDC06',\r\n    },\r\n    circle: {\r\n        width: 8,\r\n        height: 8,\r\n        borderRadius: '50%',\r\n        backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n        color: '#0FDC06',\r\n        zIndex: 1,\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\n\r\nfunction QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active\r\n            })}\r\n        >\r\n            {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n};\r\n\r\nconst steps = ['Select theme', 'Select Parameters', 'Validate'];\r\n\r\nexport default class Checkout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeStep: 0,\r\n            anchorEl: null,\r\n            openedHelp: false\r\n        }\r\n\r\n        this.setActiveStep = this.setActiveStep.bind(this);\r\n        this.setAnchorEl = this.setAnchorEl.bind(this);\r\n        this.handleMenu = this.handleMenu.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleNext = this.handleNext.bind(this);\r\n        this.startBlindtest = this.startBlindtest.bind(this);\r\n        this.navigateToMenu = this.navigateToMenu.bind(this);\r\n\r\n        window.localStorage.setItem('session_id', '');\r\n\r\n    }\r\n\r\n    getStepContent() {\r\n        const step = this.state.activeStep\r\n        switch (step) {\r\n            case 0:\r\n                return <ThemeSelectorForm />;\r\n            case 1:\r\n                return <BlindtestCustomizerForm />;\r\n            case 2:\r\n                return <Review />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    startBlindtest() {\r\n        window.localStorage.setItem('session_id', v4());\r\n        this.props.history.push('/blindtest');\r\n    }\r\n\r\n    setActiveStep(step) {\r\n        this.setState({\r\n            activeStep: step\r\n        })\r\n    }\r\n\r\n    setAnchorEl(anchor) {\r\n        this.setState({\r\n            anchorEl: anchor,\r\n            openedHelp: Boolean(anchor)\r\n        })\r\n    }\r\n\r\n    handleNext() {\r\n        this.setActiveStep(this.state.activeStep + 1);\r\n    };\r\n\r\n    handleBack() {\r\n        this.setActiveStep(this.state.activeStep - 1);\r\n    };\r\n\r\n    handleMenu(event) {\r\n        this.setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    handleClose() {\r\n        this.setAnchorEl(null);\r\n    };\r\n\r\n    navigateToMenu() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ overflow: 'hidden' }}>\r\n                <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n                <React.Fragment>\r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" style={{backgroundColor : '#282D35', flex: 1}}>\r\n                        <Toolbar>\r\n                            <Button onClick={this.navigateToMenu} style={{color: '#ffffff'}}>\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                                    Blindtest Generator\r\n                                </Typography>\r\n                            </Button>\r\n                            <div style={{ marginLeft: 'auto' }}>\r\n                                <IconButton\r\n                                    edge=\"end\"\r\n                                    aria-label=\"account of current user\"\r\n                                    aria-controls=\"menu-appbar\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMenu}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <HelpIcon />\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"menu-appbar\"\r\n                                    anchorEl={this.state.anchorEl}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    keepMounted\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    open={this.state.openedHelp}\r\n                                    onClose={this.handleClose}\r\n                                >\r\n                                    <Typography variant=\"h6\" align=\"center\">\r\n                                        Input List\r\n                                    </Typography>\r\n                                    <div>\r\n                                        <List>\r\n                                            <ListItem>\r\n                                                <strong>Arrow Up</strong>: Volume Up (Max 100)\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Arrow Down</strong>: Volume Down (Min 0)\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Arrow Left</strong>: Restart Current Element\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Arrow Right</strong>: Skip Element\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Space</strong>: Toggle Pause/Play\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Escape</strong>: Go Back to Menu\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>F11</strong>: Toggle Fullscreen\r\n                                            </ListItem>\r\n                                        </List>\r\n                                    </div>\r\n                                </Menu>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Box>\r\n                        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                            Configure\r\n                        </Typography>\r\n                        <Stepper style={{backgroundColor : '#282D35'}} alternativeLabel activeStep={this.state.activeStep} connector={<QontoConnector />}>\r\n                            {steps.map((label) => (\r\n                                <Step key={label}>\r\n                                    <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                    </Box>\r\n                    <Box>\r\n                        <React.Fragment>\r\n                            {this.getStepContent()}\r\n                        </React.Fragment>\r\n                    </Box>\r\n                    <div style={{\r\n                        position: 'fixed',\r\n                        bottom: '77px',\r\n                        right: '20px'\r\n                    }}>\r\n                        {this.state.activeStep !== 0 && (\r\n                            <Button onClick={this.handleBack} style={{color : '#0FDC06'}}>\r\n                                Back\r\n                            </Button>\r\n                        )}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{backgroundColor : '#0FDC06'}}\r\n                            onClick={this.state.activeStep === steps.length - 1 ? this.startBlindtest : this.handleNext}\r\n                        >\r\n                            {this.state.activeStep === steps.length - 1 ? 'Start' : 'Next'}\r\n                        </Button>\r\n                    </div>\r\n                    <Copyright />\r\n                </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}","import firebase from \"firebase\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCc6i9P3LgnWccwerba9czccMpSLk_nUIY\",\r\n    authDomain: \"blindtest-generator-v4.firebaseapp.com\",\r\n    projectId: \"blindtest-generator-v4\",\r\n    storageBucket: \"blindtest-generator-v4.appspot.com\",\r\n    messagingSenderId: \"557555686086\",\r\n    appId: \"1:557555686086:web:4ff48d30ee9c2d65cad5c7\",\r\n    measurementId: \"G-QVSHBRHZES\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;","export default class DtoAsset {\r\n    constructor(obj) {\r\n        this.name = obj.name\r\n        this.url = obj.url\r\n    }\r\n\r\n    toJson() {\r\n        return {\r\n            name: this.name,\r\n            url: this.url\r\n        }\r\n    }\r\n}\r\n","export default class DtoAsset {\r\n    constructor(obj, uid) {\r\n        this.uid = uid\r\n        this.name = obj.name\r\n        this.theme = obj.theme\r\n        this.url = obj.url\r\n    }\r\n}\r\n","import firebase from \"./FirebaseConfig\";\r\nimport DtoAsset from \"./DtoAsset\";\r\nimport { v4 } from \"uuid\";\r\nimport DtoSuggestion from \"./DtoSuggestion\";\r\n\r\nexport default class AssetsManager {\r\n\r\n    static ThemeList = {\r\n        games: AssetsManager.getAssetsOfCollection('games'),\r\n        animes: AssetsManager.getAssetsOfCollection('animes'),\r\n        films: AssetsManager.getAssetsOfCollection('films')\r\n    }\r\n\r\n    /** @param {string} collectionName **/\r\n    static getAssetsOfCollection(collectionName) {\r\n        const assetList = [];\r\n\r\n        firebase.firestore().collection(collectionName).get().then(doc => {\r\n            doc.docs.forEach(element => {\r\n                assetList.push(new DtoAsset(element.data()))\r\n            })\r\n        })\r\n        return (assetList);\r\n    }\r\n\r\n    /** @param {$ObjMap} assets\r\n     * @param {string} collectionName\r\n     * **/\r\n    static setAssetsOfCollection(assets, collectionName) {\r\n        assets.forEach(asset => {\r\n            firebase.firestore().collection(collectionName).doc(asset.name).set(asset)\r\n        })\r\n    }\r\n\r\n    /** @param {$ObjMap} asset **/\r\n    static suggestNewAsset(asset) {\r\n        const uid = v4()\r\n        firebase.firestore().collection('suggestions').doc(uid).set(asset)\r\n    }\r\n\r\n    static getSuggestions() {\r\n        const assetList = [];\r\n\r\n        firebase.firestore().collection('suggestions').get().then(doc => {\r\n            doc.docs.forEach(element => {\r\n                assetList.push(new DtoSuggestion(element.data(), element.id))\r\n            })\r\n        })\r\n        return (assetList);\r\n    }\r\n\r\n    /** @param {$ObjMap} suggestion\r\n     * @param {boolean} validate\r\n     *  **/\r\n    static HandleSuggestion(suggestion, validate) {\r\n        //FIXME il ne s'est rien passé\r\n        if (validate) {\r\n            firebase.firestore().collection(suggestion.theme).doc(suggestion.name).get().then(doc => {\r\n                const data = new DtoAsset(doc.data());\r\n                data.url = data.url.concat(suggestion.url)\r\n                firebase.firestore().collection(suggestion.theme).doc(suggestion.name).set(data.toJson())\r\n            }).catch(err => {\r\n                firebase.firestore().collection(suggestion.theme).doc(suggestion.name).set(new DtoAsset(suggestion).toJson())\r\n            })\r\n        }\r\n        firebase.firestore().collection('suggestions').doc(suggestion.uid).delete()\r\n    }\r\n}\r\n\r\n","//const fs = require('fs');\r\nimport { Random, MersenneTwister19937 } from 'random-js';\r\n//const path = require('path');\r\nimport AssetsManager from \"../Database/AssetsManager\";\r\n\r\nconst random = new Random(MersenneTwister19937.autoSeed());\r\n\r\nconst ThemeList = {\r\n    games: AssetsManager.ThemeList.games,\r\n    animes: AssetsManager.ThemeList.animes,\r\n    films: AssetsManager.ThemeList.films\r\n}\r\n\r\n/*function getDirectories(source) {\r\n    const dirs = fs.readdir(source, { withFileTypes: true }, err => {console.log('error: ' + err)})\r\n\r\n    if (dirs === undefined) {\r\n        console.log(\"failed to read directory: \" + source);\r\n        return undefined;\r\n    }\r\n    return (dirs.filter(dirent => dirent.isDirectory())\r\n        .map(dirent => dirent.name));\r\n}*/\r\n\r\n/*const getAbsolutePath = source => path.resolve(source);\r\n\r\nconst getDirectories = source =>\r\n    fs.readdirSync(source, { withFileTypes: true })\r\n        .filter(dirent => dirent.isDirectory())\r\n        .map(dirent => dirent.name);\r\n\r\nconst getFiles = source =>\r\n    fs.readdirSync(source, { withFileTypes: true })\r\n        .filter(dirent => dirent.isFile())\r\n        .map(dirent => dirent.name);*/\r\n\r\n/*function GenerateSelection(assetsPath, size) {\r\n    const absPath = getAbsolutePath(assetsPath);\r\n    console.log(absPath)\r\n    //getting shuffled list of assets in specified dir\r\n    const assets = random.shuffle(getDirectories(absPath));\r\n    let selectionArray = [];\r\n    let parsedSelectionArray = [];\r\n\r\n    //console.log(assets);\r\n\r\n    //isolate wanted number of selection\r\n    for (let i = 0; i < size; i++) {\r\n        if (i >= assets.length) {\r\n            break;\r\n        }\r\n        selectionArray.push(assets[i]);\r\n    }\r\n\r\n    //get random info to display for each selection\r\n    selectionArray.forEach(asset => {\r\n        const music = (absPath + '/' + asset + '/musics/' + random.shuffle(getFiles(absPath + '/' + asset + '/musics'))[0]).replace(/\\\\/g, '/');\r\n        const background = (absPath + '/' + asset + '/backgrounds/' + random.shuffle(getFiles(absPath + '/' + asset + '/backgrounds'))[0]).replace(/\\\\/g, '/');\r\n        parsedSelectionArray.push({\r\n            music: music,\r\n            image: background,\r\n        });\r\n    });\r\n\r\n    return (parsedSelectionArray);\r\n}*/\r\n\r\n/*export const checkAssetsDirectory = (path) => {\r\n    console.log(path);\r\n    const assets = getDirectories(path);\r\n\r\n    for (let i = 0; i < assets.length; i++) {\r\n        const dirs = getDirectories(path + '/' + assets[i]);\r\n        if (dirs.length === 2) {\r\n            if (dirs[0] !== 'backgrounds' || dirs[1] !== 'musics') {\r\n                return assets[i];\r\n            } else {\r\n                const filesBG = getFiles(path + '/' + assets[i] + '/backgrounds');\r\n                const filesMusics = getFiles(path + '/' + assets[i] + '/musics');\r\n\r\n                if (filesBG.length <= 0 || filesMusics <= 0) {\r\n                    return assets[i];\r\n                }\r\n            }\r\n        } else {\r\n            return assets[i];\r\n        }\r\n    }\r\n    return undefined;\r\n}*/\r\n\r\nconst FlatMapAssets = (assets) => {\r\n    //isolate wanted number of selection\r\n    const flatMappedAssets = assets.map(asset => {\r\n        const flatMappedAsset = asset.url.map(url => {\r\n            return ({\r\n                name: asset.name,\r\n                url:  url.link.split('=')[1],\r\n                start: url.start\r\n            })\r\n        })\r\n        return (flatMappedAsset)\r\n    })\r\n\r\n    return (random.shuffle(flatMappedAssets.flat(1)))\r\n}\r\n\r\nexport const GenerateSelectionFromJSON = (theme, size, reuseGame) => {\r\n    let assets;\r\n    if (theme === 'all') {\r\n        assets = random.shuffle(ThemeList.games.concat(ThemeList.animes).concat(ThemeList.films))\r\n    } else {\r\n        if(!(theme in ThemeList)) {\r\n            return []\r\n        }\r\n        assets = random.shuffle(ThemeList[theme]);\r\n    }\r\n\r\n    if (reuseGame === true) {\r\n        const flatMappedAssets = FlatMapAssets(assets)\r\n\r\n        //isolate wanted number of selection\r\n        return (flatMappedAssets.slice(0, size));\r\n    }\r\n\r\n    //isolate wanted number of selection\r\n    const selectionArray = assets.slice(0, size);\r\n\r\n    //get random info to display for each selection\r\n    const parsedSelectionArray = selectionArray.map(asset => {\r\n        const winnerChoice = random.shuffle(asset.url)[0];\r\n        return ({\r\n            name: asset.name,\r\n            url: winnerChoice.link.split('=')[1],\r\n            start: winnerChoice.start\r\n        })\r\n    })\r\n\r\n    return(parsedSelectionArray);\r\n}\r\n","\r\nfunction HandleVolumeUp(player) {\r\n    const volume = player.getVolume()\r\n\r\n    player.setVolume(volume + 10)\r\n}\r\n\r\nfunction HandleVolumeDown(player) {\r\n    const volume = player.getVolume()\r\n\r\n    player.setVolume(volume - 10)\r\n}\r\n\r\nfunction HandlePause(player) {\r\n    const status = player.getPlayerState()\r\n\r\n    if (status === 1) {\r\n        player.pauseVideo()\r\n    } else if (status === 2) {\r\n        player.playVideo()\r\n    }\r\n}\r\n\r\nconst KeyboardEvents = {\r\n    HandleVolumeDown: HandleVolumeDown,\r\n    HandleVolumeUp: HandleVolumeUp,\r\n    HandlePause: HandlePause\r\n}\r\n\r\nexport default KeyboardEvents;\r\n","import React from \"react\";\r\nimport {GenerateSelectionFromJSON} from '../Generator/SelectionGenerator'\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport KeyboardEvents from './KeyboardEvent';\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst Status = {\r\n    None: -1,\r\n    Play: 1,\r\n    Pause: 2,\r\n    Restart: 3,\r\n    Pass: 4\r\n}\r\n\r\nexport default class BlindtestGenerator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const sessionId = window.localStorage.getItem('session_id');\r\n\r\n        //Playlist Configuration\r\n        const playlistSize = window.localStorage.getItem('playlist_size')\r\n        const allowSameLicence = (window.localStorage.getItem('allow_same_licence') === 'true')\r\n        const theme = window.localStorage.getItem('theme')\r\n\r\n        //Session Configuration\r\n        this.guessTime = parseInt(window.localStorage.getItem('guess_time'))\r\n        this.waitTime = parseInt(window.localStorage.getItem('wait_time'))\r\n\r\n        this.playlist = GenerateSelectionFromJSON(theme, playlistSize, allowSameLicence)\r\n\r\n        this.state = {\r\n            display: false,\r\n            status: Status.None,\r\n            counter: this.guessTime,\r\n            player: undefined,\r\n            playerObj: null,\r\n            playlistIndex: 0,\r\n            currMusic: null,\r\n            loaded: false,\r\n            error: false,\r\n            stop: false\r\n        }\r\n\r\n        this.nextGuess = this.nextGuess.bind(this)\r\n        this.updatePlayer = this.updatePlayer.bind(this)\r\n        this._onError = this._onError.bind(this)\r\n        this._onPlay = this._onPlay.bind(this)\r\n        this._onReady = this._onReady.bind(this)\r\n        this.startGuessTime = this.startGuessTime.bind(this)\r\n        this.startAnswerTime = this.startAnswerTime.bind(this)\r\n        this.handleKeyDown = this.handleKeyDown.bind(this)\r\n        //this._onStateChange = this._onStateChange.bind(this)\r\n\r\n        if (this.playlist.length === 0 || !sessionId) {\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    //---------------------------------------------------------Iframe Handler\r\n    _onReady = (event) => {\r\n        // access to player in all event handlers via event.target\r\n        event.target.playVideo();\r\n        this.setState({\r\n            playerObj: event.target\r\n        })\r\n        console.log(\"ready to play video\")\r\n    }\r\n\r\n    _onPlay = (event) => {\r\n        // access to player in all event handlers via event.target\r\n        //event.target.pauseVideo();\r\n        console.log(\"video started\")\r\n        this.setState({\r\n            loaded: true,\r\n            playlistIndex: this.state.playlistIndex + 1\r\n        });\r\n    }\r\n\r\n    _onEnd = (event) => {\r\n        // access to player in all event handlers via event.target\r\n        event.target.stopVideo();\r\n        console.log(\"stop video\");\r\n        //this.nextGuess(true)\r\n    }\r\n\r\n    _onError = (event) => {\r\n        // access to player in all event handlers via event.target\r\n        alert(`[${this.state.currMusic.name}]: Failed to load video with id: ${this.state.currMusic.url}`)\r\n        this.setState({\r\n            error: true\r\n        })\r\n        //this.nextGuess(true)\r\n    }\r\n\r\n    _onStateChange = (event) => {\r\n        //Can do something with all states here\r\n        console.log(\"state changed: \" + event.data)\r\n        const code = event.data;\r\n        switch (code) {\r\n            case -1:\r\n                break\r\n            case 1:\r\n                break\r\n            case 2:\r\n                break\r\n            case 5:\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        /*\r\n        -1 (unstarted)\r\n        0 (ended)\r\n        1 (playing)\r\n        2 (paused)\r\n        3 (buffering)\r\n        5 (video cued).\r\n         */\r\n    }\r\n\r\n    //---------------------------------------------------------Player Config\r\n    updatePlayer = (shift) => {\r\n        let timeoutCounter = 10;\r\n        this.setState({\r\n            loaded: false,\r\n            error: false\r\n        });\r\n        return new Promise((resolve, reject) => {\r\n            if (this.playlist.length === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n\r\n            const music = shift === true ? this.playlist.shift() : this.playlist[0];\r\n\r\n            //console.log(\"Loading music: \" + music.name);\r\n            const opt = {\r\n                height: window.screen.height - 5,\r\n                width: window.screen.width,\r\n                playerVars: {\r\n                    // https://developers.google.com/youtube/player_parameters\r\n                    autoplay: 1,\r\n                    start: music.start,\r\n                    end: music.start + this.guessTime + this.answerTime,\r\n                    fs: 0,\r\n                    origin: window.location,\r\n                }\r\n            }\r\n            console.log(\"init Player\");\r\n            this.setState({\r\n                currMusic: music,\r\n                player: <YouTube videoId={music.url}\r\n                                opts={opt}\r\n                                onReady={this._onReady}\r\n                                onPlay={this._onPlay}\r\n                                onEnd={this._onEnd}\r\n                                onError={this._onError}\r\n                                onStateChange={this._onStateChange}\r\n                />\r\n            });\r\n\r\n            const timer = setInterval(() => {\r\n                timeoutCounter--;\r\n                if (this.state.loaded === true) {\r\n                    clearInterval(timer);\r\n                    resolve();\r\n                } else if (timeoutCounter <= 0 || this.state.error === true) {\r\n                    console.log(\"Failed to load music\");\r\n                    clearInterval(timer);\r\n                    reject();\r\n                }\r\n            }, 1000);\r\n        })\r\n    }\r\n\r\n    nextGuess(shift) {\r\n        const sessionId = window.localStorage.getItem('session_id');\r\n        if (!sessionId) {\r\n            return ;\r\n        }\r\n        console.log(\"Starting new guess\");\r\n        this.updatePlayer(shift).then(() => {\r\n            this.setState({\r\n                status: Status.Play,\r\n                counter: this.guessTime\r\n            })\r\n            this.startGuessTime();\r\n        }).catch(() => {\r\n            console.log(\"erreur du chargement de la music\");\r\n            if (this.playlist.length === 0) {\r\n                this.props.history.push('/')\r\n            } else {\r\n                this.nextGuess(shift);\r\n            }\r\n        })\r\n    }\r\n\r\n    //---------------------------------------------------------Player Status\r\n    doneAction = (timer, nextGuess) => {\r\n        clearInterval(timer)\r\n        this.setState({\r\n            status: Status.None,\r\n            display: false,\r\n            counter: this.guessTime\r\n        })\r\n        this.nextGuess(nextGuess)\r\n    }\r\n\r\n    checkStatus = (timer) => {\r\n        switch (this.state.status) {\r\n            case Status.Pause:\r\n                return true\r\n            case Status.Restart:\r\n                this.doneAction(timer,false)\r\n                return true\r\n            case Status.Pass:\r\n                this.doneAction(timer,true)\r\n                return\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    //---------------------------------------------------------Timers\r\n    startAnswerTime() {\r\n        const timer = setInterval(() => {\r\n            //check status\r\n            if (this.checkStatus(timer)) {\r\n                return;\r\n            }\r\n            const counter = this.state.counter\r\n            if (counter === 0) {\r\n                this.doneAction(timer,true)\r\n            } else {\r\n                this.setState({\r\n                    counter: counter - 1\r\n                })\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    startGuessTime() {\r\n        const timer = setInterval(() => {\r\n            //check status\r\n            if (this.checkStatus(timer)) {\r\n                return;\r\n            }\r\n            const counter = this.state.counter\r\n            if (counter === 1) {\r\n                clearInterval(timer)\r\n                this.setState({\r\n                    display: true,\r\n                    counter: this.waitTime\r\n                })\r\n                this.startAnswerTime()\r\n            } else {\r\n                this.setState({\r\n                    counter: counter - 1\r\n                })\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    //---------------------------------------------------------User Inputs\r\n    handleKeyDown(key, event) {\r\n        if (this.state.player === null) {\r\n            return\r\n        }\r\n        console.log(\"receiving key: \" + key)\r\n        switch (key) {\r\n            case 'up':\r\n                KeyboardEvents.HandleVolumeUp(this.state.playerObj)\r\n                break\r\n            case 'down':\r\n                KeyboardEvents.HandleVolumeDown(this.state.playerObj)\r\n                break\r\n            case 'left':\r\n                this.setState({\r\n                    status: Status.Restart\r\n                })\r\n                break\r\n            case 'right':\r\n                this.setState({\r\n                    status: Status.Pass\r\n                })\r\n                break\r\n            case 'space':\r\n                this.setState({\r\n                    status: this.state.status === Status.Pause ? Status.Play : Status.Pause\r\n                })\r\n                //fix player non reconnu\r\n                KeyboardEvents.HandlePause(this.state.playerObj)\r\n                break\r\n            case 'esc':\r\n                //TODO arreter le chargement des autres musiques\r\n                this.props.history.push('/')\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    //---------------------------------------------------------Renderer\r\n    componentWillMount() {\r\n        this.nextGuess(true);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Helmet bodyAttributes={{style: 'background-color : #242629'}}/>\r\n            {!this.state.display &&\r\n            <div style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                fontSize: '200px',\r\n                color: '#BFC6D0',\r\n                fontWeight: 'bold'\r\n            }}>\r\n                {this.state.counter}\r\n            </div>\r\n            }\r\n            <div style={{ display: this.state.display ? '' : 'none' }}>\r\n                {this.state.player}\r\n            </div>\r\n            <div style={{ display: 'none' }}>\r\n                <KeyboardEventHandler\r\n                    handleKeys={['up', 'down', 'left', 'right', 'space', 'esc']}\r\n                    onKeyEvent={this.handleKeyDown} />\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\nconst containerController = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {backgroundColor : customColor,\r\n        marginTop: '8%',\r\n        width: '40%',\r\n        height: '50px'\r\n    }\r\n}\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.navigateToCheckout = this.navigateToCheckout.bind(this)\r\n        this.navigateToAssets = this.navigateToAssets.bind(this)\r\n        this.navigateToContributors = this.navigateToContributors.bind(this)\r\n    }\r\n\r\n    navigateToCheckout() {\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    navigateToAssets() {\r\n        this.props.history.push('/assets');\r\n    }\r\n\r\n    navigateToContributors() {\r\n        this.props.history.push('/contributors');\r\n    }\r\n\r\n    render() {\r\n        return <div style={{ overflow: 'hidden' }}>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <div style={containerController}>\r\n                <p style={{color: 'white'}}>Update: You can now Add assets by suggesting them in the Asset page !</p>\r\n                <Button variant=\"contained\" style={buttonStyle('#0FDC06')} onClick={this.navigateToCheckout}>\r\n                    Generate Blindtest\r\n                </Button>\r\n                <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToAssets}>\r\n                    See Assets Library\r\n                </Button>\r\n                <Button variant=\"contained\" style={buttonStyle('#b53ad6')} onClick={this.navigateToContributors}>\r\n                    See contributors\r\n                </Button>\r\n            </div>\r\n            <Copyright />\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\nconst containerController = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    color: 'white'\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {\r\n        backgroundColor : customColor,\r\n        marginTop: '1%',\r\n        marginLeft: '1%',\r\n        width: '10%',\r\n        height: '40px'\r\n    }\r\n}\r\n\r\nexport default class ContributorsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.navigateToMenu = this.navigateToMenu.bind(this)\r\n    }\r\n\r\n    navigateToMenu() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return <div style={{ overflow: 'hidden' }}>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToMenu}>\r\n                Menu\r\n            </Button>\r\n            <div style={containerController}>\r\n                <Typography color='inherit'>Work In Progress..</Typography>\r\n            </div>\r\n            <Copyright />\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText, Button\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport PropTypes from 'prop-types';\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AssetsManager from \"../Database/AssetsManager\";\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        <ListItem style={style} key={index}>\r\n            <ListItemText primary={`Item ${index + 1}`} />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nconst classes = {\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: '#d01a1a',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    listSection: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n        backgroundColor: 'inherit',\r\n        padding: 0,\r\n    },\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {\r\n        backgroundColor : customColor,\r\n        marginTop: '1%',\r\n        marginLeft: '1%',\r\n        width: '10%',\r\n        height: '40px'\r\n    }\r\n}\r\n\r\n\r\nexport default class AssetsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'selection-games': {},\r\n            'selection-animes': {},\r\n            'selection-films': {}\r\n        }\r\n\r\n        this.onListSearchUpdate = this.onListSearchUpdate.bind(this)\r\n        this.navigateToMenu = this.navigateToMenu.bind(this)\r\n        this.navigateToSuggest = this.navigateToSuggest.bind(this)\r\n    }\r\n\r\n    redirectToUrl(event, url) {\r\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) {\r\n            newWindow.opener = null\r\n        }\r\n    }\r\n\r\n    onListSearchUpdate(event, value) {\r\n        const stateObject = function () {\r\n            const returnObj = {};\r\n            const key = event.target.id.split('-')[2]\r\n            if (!key) {\r\n                returnObj['selection-games'] = {};\r\n                returnObj['selection-animes'] = {};\r\n                returnObj['selection-films'] = {};\r\n            } else {\r\n                const associatedKey = `selection-${key}`.toLowerCase()\r\n                returnObj[associatedKey] = value !== null ? value : {};\r\n            }\r\n            return returnObj;\r\n        }();\r\n\r\n        this.setState(stateObject)\r\n    }\r\n\r\n    renderAssetList(asset, name) {\r\n        /*return <div>\r\n            <FixedSizeList height={400} width={300} itemSize={46} itemCount={length}>\r\n                {renderRow}\r\n            </FixedSizeList>\r\n        </div>*/\r\n        const associatedKey = `selection-${name}`.toLowerCase()\r\n\r\n        if (!this.state[associatedKey] || !this.state[associatedKey].url) {\r\n            return <div/>\r\n        }\r\n        return <div style={classes.root}>\r\n            <List style={{backgroundColor: '#ffffff', color: '#000000'}} subheader={<li />}>\r\n                {this.state[associatedKey].url.map((element) => (\r\n                    <li key={element.link} style={classes.listSection}>\r\n                        <ul style={classes.ul}>\r\n                            <ListItem button onClick={event => this.redirectToUrl(event, element.link)} key={`item-${element.link}`}>\r\n                                <ListItemText primary={element.link} />\r\n                            </ListItem>\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    }\r\n\r\n    renderAssetSearch(asset, name) {\r\n        const associatedValue = `selection-${name}`\r\n        return <div style={{\r\n            backgroundColor: '#ffffff',\r\n            display: 'inline-block',\r\n            'verticalAlign': 'middle'}}>\r\n            <Autocomplete color='inherit'\r\n                          onChange={this.onListSearchUpdate}\r\n                          id={`combo-box-${name}`}\r\n                          options={asset}\r\n                          getOptionLabel={(option) => option.name}\r\n                          style={{ width: 300 }}\r\n                          renderInput={(params) => <TextField {...params} value={this.state[associatedValue]} label={name} variant=\"outlined\" />}\r\n            />\r\n            {this.renderAssetList(asset, name)}\r\n        </div>\r\n    }\r\n\r\n    navigateToMenu() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    navigateToSuggest() {\r\n        this.props.history.push('/assets/suggest')\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToMenu}>\r\n                Menu\r\n            </Button>\r\n            <div style={{\r\n                width: '50%',\r\n                height: '50%',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}>\r\n                {this.renderAssetSearch(AssetsManager.ThemeList.games, 'Games')}\r\n                {this.renderAssetSearch(AssetsManager.ThemeList.animes, 'Animes')}\r\n                {this.renderAssetSearch(AssetsManager.ThemeList.films, 'Films')}\r\n            </div>\r\n            <div  style={{\r\n                position: 'fixed',\r\n                bottom: '77px',\r\n                right: '20px'\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor : '#0FDC06'}}\r\n                    onClick={this.navigateToSuggest}\r\n                >\r\n                   Suggest Asset\r\n                </Button>\r\n            </div>\r\n            <Copyright />\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {Box, Button, FormControl, List, ListItem} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AssetsManager from \"../Database/AssetsManager\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Copyright from \"../Copyright\";\r\n\r\nconst classes = {\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: '#d01a1a',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    listSection: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n        backgroundColor: 'inherit',\r\n        padding: 0,\r\n    },\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {\r\n        backgroundColor : customColor,\r\n        marginTop: '1%',\r\n        marginLeft: '1%',\r\n        width: '10%',\r\n        height: '40px'\r\n    }\r\n}\r\n\r\nexport default class SuggestPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            assetName: \"\",\r\n            theme: \"games\",\r\n            urlList: []\r\n        }\r\n        this.navigateToAssets = this.navigateToAssets.bind(this)\r\n        this.submitSuggestion = this.submitSuggestion.bind(this)\r\n        this.onAssetSearchChange = this.onAssetSearchChange.bind(this)\r\n        this.onAssetSubmitChange = this.onAssetSubmitChange.bind(this)\r\n        this.setOpen = this.setOpen.bind(this)\r\n        this.handleOpen = this.handleOpen.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onAddUrl = this.onAddUrl.bind(this)\r\n        this.onRemoveUrl = this.onRemoveUrl.bind(this)\r\n        this.onChangeUrl = this.onChangeUrl.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            theme: event.target.value\r\n        })\r\n    };\r\n    setOpen(state) {\r\n        this.setState({\r\n            opened: state\r\n        })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setOpen(false);\r\n    }\r\n\r\n    handleOpen() {\r\n        this.setOpen(true);\r\n    }\r\n\r\n    onAssetSubmitChange(event, value) {\r\n        this.setState({\r\n            assetName: value ? value.name : \"\"\r\n        })\r\n    }\r\n\r\n    onAssetSearchChange(event) {\r\n        const value = event.target.value\r\n        this.setState({\r\n            assetName: value ? value : \"\"\r\n        })\r\n    }\r\n\r\n    onAddUrl(event) {\r\n        this.state.urlList.push({\r\n            link: \"\",\r\n            start: 0\r\n        })\r\n        this.setState({\r\n            urlList: this.state.urlList\r\n        })\r\n    }\r\n\r\n    onRemoveUrl(index) {\r\n        const isUrlFound = index >= 0 && index < this.state.urlList.length\r\n\r\n        if (isUrlFound) {\r\n            this.state.urlList.splice(index, 1)\r\n            this.setState({\r\n                urlList: this.state.urlList\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeUrl(index, value, isLink) {\r\n        const isUrlFound = index >= 0 && index < this.state.urlList.length\r\n\r\n        if (isUrlFound) {\r\n            const urlList = this.state.urlList\r\n            if (isLink) {\r\n                urlList[index].link = value\r\n            } else {\r\n                urlList[index].start = parseInt(value)\r\n            }\r\n            this.setState({\r\n                urlList: urlList\r\n            })\r\n        }\r\n    }\r\n\r\n    renderAssetSearch(asset, name) {\r\n        return <div style={{\r\n            backgroundColor: '#ffffff',\r\n            display: 'inline-block',\r\n            'verticalAlign': 'middle'}}>\r\n            <Autocomplete freeSolo color='inherit'\r\n                          onInput={this.onAssetSearchChange}\r\n                          onChange={this.onAssetSubmitChange}\r\n                          id={`combo-box-${name}`}\r\n                          options={asset}\r\n                          getOptionLabel={(option) => option.name}\r\n                          style={{ width: 300 }}\r\n                          renderInput={(params) => <TextField {...params} value={this.state.assetName} label={name} variant=\"outlined\" />}\r\n            />\r\n        </div>\r\n    }\r\n\r\n    renderUrlList() {\r\n        return <div style={classes.root}>\r\n            <List style={{backgroundColor: '#ffffff', color: '#000000'}} subheader={<li />}>\r\n                {this.state.urlList.map((element, index) => {\r\n                    return <li key={index} style={classes.listSection}>\r\n                        <ul style={classes.ul}>\r\n                            <ListItem key={`item-${index}`}>\r\n                                <TextField value={element.link} label=\"link\" onChange={(event) => this.onChangeUrl(index, event.target.value, true)}/>\r\n                                <TextField type=\"number\" value={element.start} label=\"start\" onChange={(event) => this.onChangeUrl(index, event.target.value, false)}/>\r\n                                <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon/>} onClick={event => this.onRemoveUrl(index)} />\r\n                            </ListItem>\r\n                        </ul>\r\n                    </li>\r\n                })}\r\n            </List>\r\n        </div>\r\n    }\r\n\r\n    submitSuggestion() {\r\n        //Submit\r\n        /*\r\n        assetName: \"\",\r\n            theme: \"games\",\r\n            urlList: []\r\n         */\r\n        const name = this.state.assetName\r\n        const theme = this.state.theme\r\n        const url = this.state.urlList\r\n\r\n        if (!name || !theme || url.length <= 0) {\r\n            console.log(name)\r\n            alert(\"missing arguments name or theme or url\")\r\n            return\r\n        }\r\n\r\n        let error = false\r\n        url.forEach((link, index) => {\r\n            if (!link.link || link.start < 0) {\r\n                alert(\"Wrong argument in url nb \" + index)\r\n                error = true\r\n            }\r\n        })\r\n\r\n        if (error) {\r\n            return\r\n        }\r\n\r\n        const asset = {\r\n            theme: theme,\r\n            name: name,\r\n            url: url\r\n        }\r\n        AssetsManager.suggestNewAsset(asset)\r\n    }\r\n\r\n    navigateToAssets() {\r\n        this.props.history.push('/assets')\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToAssets}>\r\n                Cancel\r\n            </Button>\r\n            <Box align='center'>\r\n                <FormControl component=\"fieldset\" style={{ marginTop: '5%' }}>\r\n                    <Select\r\n                        labelId=\"select-asset-theme\"\r\n                        id=\"select-asset-theme\"\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        onOpen={this.handleOpen}\r\n                        value={this.state.theme}\r\n                        onChange={this.handleChange}\r\n                        style={{backgroundColor: '#ffffff'}}\r\n                        inputProps={{\r\n                            style: {\r\n                                color: 'white'\r\n                            }\r\n                        }}\r\n                    >\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value='games'>Video Games</MenuItem>\r\n                        <MenuItem value='animes'>Anime</MenuItem>\r\n                        <MenuItem value='films'>Films</MenuItem>\r\n                    </Select>\r\n                    {this.state.theme === 'games' && this.renderAssetSearch(AssetsManager.ThemeList.games, \"Asset Name\")}\r\n                    {this.state.theme === 'animes' && this.renderAssetSearch(AssetsManager.ThemeList.animes, \"Asset Name\")}\r\n                    {this.state.theme === 'films' && this.renderAssetSearch(AssetsManager.ThemeList.films, \"Asset Name\")}\r\n                    {this.renderUrlList()}\r\n                    {this.state.theme && <Button variant=\"contained\" style={{backgroundColor: '#4a6b58'}} onClick={this.onAddUrl}>\r\n                        Add Url\r\n                    </Button>}\r\n                </FormControl>\r\n            </Box>\r\n            <div  style={{\r\n                position: 'fixed',\r\n                bottom: '77px',\r\n                right: '20px'\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor : '#0FDC06'}}\r\n                    onClick={this.submitSuggestion}\r\n                >\r\n                    Suggest Asset\r\n                </Button>\r\n            </div>\r\n            <Copyright/>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText, Button\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport PropTypes from 'prop-types';\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AssetsManager from \"../Database/AssetsManager\";\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        <ListItem style={style} key={index}>\r\n            <ListItemText primary={`Item ${index + 1}`} />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nconst classes = {\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: '#d01a1a',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    listSection: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n        backgroundColor: 'inherit',\r\n        padding: 0,\r\n    },\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {\r\n        backgroundColor : customColor,\r\n        marginTop: '1%',\r\n        marginLeft: '1%',\r\n        width: '10%',\r\n        height: '40px'\r\n    }\r\n}\r\n\r\n\r\nexport default class AdminSuggestionPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'selection-suggestions': {}\r\n        }\r\n\r\n        this.onListSearchUpdate = this.onListSearchUpdate.bind(this)\r\n        this.navigateToMenu = this.navigateToMenu.bind(this)\r\n        this.navigateToSuggest = this.navigateToSuggest.bind(this)\r\n        this.handleSuggestion = this.handleSuggestion.bind(this)\r\n    }\r\n\r\n    redirectToUrl(event, url) {\r\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) {\r\n            newWindow.opener = null\r\n        }\r\n    }\r\n\r\n    onListSearchUpdate(event, value) {\r\n        const stateObject = function () {\r\n            const returnObj = {};\r\n            const key = event.target.id.split('-')[2]\r\n            if (!key) {\r\n                returnObj['selection-suggestions'] = {};\r\n            } else {\r\n                const associatedKey = `selection-${key}`.toLowerCase()\r\n                returnObj[associatedKey] = value !== null ? value : {};\r\n            }\r\n            return returnObj;\r\n        }.bind(event)();\r\n\r\n        this.setState(stateObject)\r\n    }\r\n\r\n    renderAssetList(asset, name) {\r\n        /*return <div>\r\n            <FixedSizeList height={400} width={300} itemSize={46} itemCount={length}>\r\n                {renderRow}\r\n            </FixedSizeList>\r\n        </div>*/\r\n        const associatedKey = `selection-${name}`.toLowerCase()\r\n\r\n        if (!this.state[associatedKey] || !this.state[associatedKey].url) {\r\n            return <div/>\r\n        }\r\n        return <div style={classes.root}>\r\n            <List style={{backgroundColor: '#ffffff', color: '#000000'}} subheader={<li />}>\r\n                {this.state[associatedKey].url.map((element) => (\r\n                    <li key={element.link} style={classes.listSection}>\r\n                        <ul style={classes.ul}>\r\n                            <ListItem button onClick={event => this.redirectToUrl(event, element.link)} key={`item-${element.link}`}>\r\n                                <ListItemText primary={element.link} />\r\n                                <ListItemText primary={element.start} />\r\n                            </ListItem>\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    }\r\n\r\n    renderAssetSearch(asset, name) {\r\n        const associatedValue = `selection-${name}`\r\n        return <div style={{\r\n            backgroundColor: '#ffffff',\r\n            display: 'inline-block',\r\n            'verticalAlign': 'middle'}}>\r\n            <Autocomplete color='inherit'\r\n                          onChange={this.onListSearchUpdate}\r\n                          id={`combo-box-${name}`}\r\n                          options={asset}\r\n                          getOptionLabel={(option) => `${option.name} (${option.theme})`}\r\n                          style={{ width: 300 }}\r\n                          renderInput={(params) => <TextField {...params} value={this.state[associatedValue]} label={name} variant=\"outlined\" />}\r\n            />\r\n            {this.renderAssetList(asset, name)}\r\n        </div>\r\n    }\r\n\r\n    /** @param {boolean} validate */\r\n    handleSuggestion(validate) {\r\n\r\n        console.log(\"handle suggestion with validation: \" + validate)\r\n        //validate: true or false\r\n        const suggestion = this.state['selection-suggestions']\r\n\r\n        if (suggestion) {\r\n            AssetsManager.HandleSuggestion(suggestion, validate)\r\n        }\r\n    }\r\n\r\n    navigateToMenu() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    navigateToSuggest() {\r\n        this.props.history.push('/assets/suggest')\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToMenu}>\r\n                Menu\r\n            </Button>\r\n            <div style={{\r\n                width: '50%',\r\n                height: '50%',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}>\r\n                {this.renderAssetSearch(AssetsManager.getSuggestions(), 'Suggestions')}\r\n            </div>\r\n            <div  style={{\r\n                position: 'fixed',\r\n                bottom: '77px',\r\n                right: '120px'\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor : '#f50404'}}\r\n                    onClick={event => this.handleSuggestion(false)}\r\n                >\r\n                    Reject\r\n                </Button>\r\n            </div>\r\n            <div  style={{\r\n                position: 'fixed',\r\n                bottom: '77px',\r\n                right: '20px'\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor : '#0FDC06'}}\r\n                    onClick={event => this.handleSuggestion(true)}\r\n                >\r\n                   Accept\r\n                </Button>\r\n            </div>\r\n            <Copyright />\r\n        </div>\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Route, HashRouter} from 'react-router-dom';\r\nimport Checkout from './Configuration/Checkout';\r\nimport BlindtestGenerator from \"./Session/BlindtestGenerator\";\r\nimport HomePage from \"./Home/HomePage\";\r\nimport ContributorsPage from \"./Home/ContributorsPage\";\r\nimport AssetsPage from \"./Home/AssetsPage\";\r\nimport SuggestPage from \"./Home/SuggestPage\";\r\nimport AdminSuggestionPage from \"./Home/AdminSuggestionPage\";\r\n\r\nclass RoutingConfig extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter basename='/'>\r\n                <div>\r\n                    <Route exact path=\"/\" component={HomePage}/>\r\n                    <Route exact path=\"/checkout\" component={Checkout}/>\r\n                    <Route exact path=\"/contributors\" component={ContributorsPage}/>\r\n                    <Route exact path=\"/assets\" component={AssetsPage}/>\r\n                    <Route exact path=\"/assets/suggest\" component={SuggestPage}/>\r\n                    <Route exact path=\"/blindtest\" component={BlindtestGenerator}/>\r\n                    <Route exact path=\"/admin/suggestions\" component={AdminSuggestionPage}/>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoutingConfig;","import './App.css';\r\nimport React from \"react\";\r\nimport RoutingConfig from \"./RoutingConfig\";\r\n\r\nfunction App() {\r\n  //Setting up default Values\r\n  window.localStorage.setItem('theme', 'games')\r\n  window.localStorage.setItem('playlist_size', '100')\r\n  window.localStorage.setItem('guess_time', '13')\r\n  window.localStorage.setItem('wait_time', '5')\r\n  window.localStorage.setItem('allow_same_licence', 'false')\r\n\r\n  return (<RoutingConfig />);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}