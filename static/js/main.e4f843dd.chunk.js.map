{"version":3,"sources":["Configuration/ThemeSelectorForm.js","Configuration/Review.js","Configuration/BlindtestCustomizerForm.js","Copyright.js","Configuration/Checkout.js","Database/FirebaseConfig.js","Database/DtoAsset.js","Database/DtoSuggestion.js","Database/AssetsManager.js","Generator/SelectionGenerator.js","Session/KeyboardEvent.js","Session/BlindtestGenerator.js","Home/HomePage.js","Home/ContributorsPage.js","Home/AssetsPage.js","Home/SuggestPage.js","Home/AdminSuggestionPage.js","RoutingConfig.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeSelectorForm","props","theme","window","localStorage","getItem","defaultTheme","state","opened","classes","makeStyles","button","display","marginTop","spacing","select","backgroundColor","borderColor","icon","fill","formControl","margin","minWidth","setOpen","bind","handleOpen","handleClose","handleChange","event","setItem","target","value","this","setState","Fragment","Typography","variant","gutterBottom","align","style","color","Box","FormControl","Select","labelId","id","open","onClose","onOpen","onChange","defaultValue","inputProps","MenuItem","React","Component","ThemeList","games","animes","films","musics","all","getTheme","key","allowSameLicence","getFormattedPlaylistSize","playlistSize","getFormattedGuessTime","guessTime","waitTime","Review","Grid","container","item","xs","GreenSwitch","withStyles","switchBase","checked","track","Switch","CustomSlider","root","height","borderRadius","thumb","width","border","boxShadow","active","Slider","BlindtestCustomizerForm","parseInt","defaultplaylistSize","defaultGuessTime","defaultWaitTime","seed","MersenneTwister19937","autoSeed","next","updatePlaylistSize","updateGuessTime","updateWaitTime","handleSwitchChange","updateSeed","newPlaylistSize","toString","newSeed","actualGuessTime","newGuessTime","innerText","actualWaitTime","newWaitTime","component","FormGroup","FormLabel","TextField","type","min","textAlign","name","marginBottom","getAriaValueText","valuetext","aria-labelledby","valueLabelDisplay","step","marks","max","Copyright","position","bottom","left","transform","Link","href","Date","getFullYear","QontoConnector","alternativeLabel","top","right","completed","line","borderTopWidth","StepConnector","useQontoStepIconStyles","alignItems","circle","zIndex","fontSize","QontoStepIcon","className","clsx","steps","Checkout","activeStep","anchorEl","openedHelp","setActiveStep","setAnchorEl","handleMenu","handleBack","handleNext","startBlindtest","navigateToMenu","Error","v4","history","push","anchor","Boolean","currentTarget","overflow","Helmet","bodyAttributes","CssBaseline","AppBar","flex","Toolbar","Button","onClick","noWrap","marginLeft","IconButton","edge","aria-label","aria-controls","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","List","ListItem","Stepper","connector","map","label","Step","StepLabel","StepIconComponent","getStepContent","length","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","DtoAsset","obj","url","uid","AssetsManager","collectionName","assetList","firestore","collection","get","then","doc","docs","forEach","element","data","assets","asset","set","assetName","link","DtoSuggestion","suggestion","validate","concat","toJson","catch","err","delete","getAssetsOfCollection","selectionGenerator","random","Random","flatMappedAssets","split","start","shuffle","flat","size","reuseAsset","partSize","Object","keys","GenerateSelectionFromJSON","reuseGame","EqualizeAllGenreSelection","FlatMapAssets","slice","winnerChoice","KeyboardEvents","HandleVolumeDown","player","volume","getVolume","setVolume","HandleVolumeUp","HandlePause","status","getPlayerState","pauseVideo","playVideo","Status","BlindtestGenerator","_onReady","playerObj","console","log","_onPlay","loaded","playlistIndex","_onEnd","stopVideo","_onError","alert","currMusic","error","_onStateChange","updatePlayer","shift","timeoutCounter","Promise","resolve","reject","playlist","music","opt","screen","playerVars","autoplay","end","answerTime","fs","origin","location","videoId","opts","onReady","onPlay","onEnd","onError","onStateChange","timer","setInterval","clearInterval","doneAction","nextGuess","counter","checkStatus","sessionId","setSeed","undefined","stop","startGuessTime","startAnswerTime","handleKeyDown","fontWeight","handleKeys","onKeyEvent","containerController","flexDirection","buttonStyle","customColor","HomePage","navigateToCheckout","navigateToAssets","navigateToContributors","ContributorsPage","maxWidth","maxHeight","listSection","ul","padding","AssetsPage","onListSearchUpdate","navigateToSuggest","newWindow","opener","stateObject","returnObj","toLowerCase","associatedKey","subheader","redirectToUrl","ListItemText","primary","associatedValue","Autocomplete","options","getOptionLabel","option","renderInput","params","renderAssetList","setAssetsOfCollection","require","renderAssetSearch","SuggestPage","urlList","submitSuggestion","onAssetSearchChange","onAssetSubmitChange","onAddUrl","onRemoveUrl","onChangeUrl","index","splice","isLink","freeSolo","onInput","startIcon","suggestNewAsset","renderUrlList","AdminSuggestionPage","handleSuggestion","HandleSuggestion","getSuggestions","RoutingConfig","basename","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4f843dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport default class ThemeSelectorForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const theme = window.localStorage.getItem('theme')\r\n\r\n        this.defaultTheme = theme ? theme : 'games'\r\n\r\n        this.state = {\r\n            opened: false,\r\n            theme: this.defaultTheme,\r\n            classes:  makeStyles((theme) => ({\r\n                button: {\r\n                    display: 'block',\r\n                    marginTop: theme.spacing(2),\r\n                },\r\n                select: {\r\n                    backgroundColor: 'white',\r\n                    '&:before': {\r\n                        borderColor: '#eaeaf0',\r\n                    },\r\n                    '&:after': {\r\n                        borderColor: '#0FDC06',\r\n                    }\r\n                },\r\n                icon: {\r\n                    fill: '#0FDC06',\r\n                },\r\n                formControl: {\r\n                    margin: theme.spacing(1),\r\n                    minWidth: 120,\r\n                },\r\n            }))\r\n        }\r\n\r\n        this.setOpen = this.setOpen.bind(this);\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        window.localStorage.setItem('theme', event.target.value);\r\n        this.setState({\r\n            theme: event.target.value\r\n        })\r\n    };\r\n\r\n    setOpen(state) {\r\n        this.setState({\r\n            opened: state\r\n        })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setOpen(false);\r\n    }\r\n\r\n    handleOpen() {\r\n        this.setOpen(true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom align='center' style={{ color: 'white'}}>\r\n                    Select Theme\r\n                </Typography>\r\n                <Box align='center'>\r\n                    <FormControl style={{ marginTop: '10%', minWidth: 300 }}>\r\n                        <Select\r\n                            labelId=\"demo-controlled-open-select-label\"\r\n                            id=\"demo-controlled-open-select\"\r\n                            open={this.state.open}\r\n                            onClose={this.handleClose}\r\n                            onOpen={this.handleOpen}\r\n                            value={this.state.theme}\r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.defaultTheme}\r\n                            style={{ color: '#ffffff'}}\r\n                            inputProps={{\r\n                                style: {\r\n                                    color: 'white'\r\n                                },\r\n                                classes: {\r\n                                    icon: this.state.classes.icon\r\n                                }\r\n                            }}\r\n                        >\r\n                            <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                            <MenuItem value='games'>Video Games</MenuItem>\r\n                            <MenuItem value='animes'>Anime</MenuItem>\r\n                            <MenuItem value='films'>Films</MenuItem>\r\n                            <MenuItem value='musics'>Musics</MenuItem>\r\n                            <MenuItem value='all'>All Genre</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Typography,\r\n    Grid\r\n} from \"@material-ui/core\"\r\n\r\nconst ThemeList = {\r\n    games: \"Video Games\",\r\n    animes: \"Animes\",\r\n    films: \"Movies\",\r\n    musics: \"Musics\",\r\n    all: \"All Genre\"\r\n}\r\n\r\nfunction getTheme() {\r\n    const key = window.localStorage.getItem('theme')\r\n    const allowSameLicence = (window.localStorage.getItem('allow_same_licence') === 'true')\r\n\r\n    const result = `${ThemeList[key]} (${allowSameLicence ? 'Multiple selection per Licence' : 'One selection per Licence'})`\r\n    return result;\r\n}\r\n\r\nfunction getFormattedPlaylistSize() {\r\n    const playlistSize = window.localStorage.getItem('playlist_size');\r\n\r\n    return `${playlistSize} elements in this playlist`;\r\n}\r\n\r\nfunction getFormattedGuessTime() {\r\n    const guessTime = window.localStorage.getItem('guess_time');\r\n    const waitTime = window.localStorage.getItem('wait_time');\r\n\r\n    return `${guessTime} sec to guess then ${waitTime} before next guess`;\r\n}\r\n\r\nexport default function Review() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom align='center' style={{ color: 'white' }}>\r\n                Configuration summary\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom align='center'>\r\n                <Grid container spacing={5} style={{ marginTop: '5%' }}>\r\n                    <React.Fragment key=\"Theme\">\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>Theme</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>{getTheme()}</Typography>\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                    <React.Fragment key=\"Size of Playlist\">\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>Size of Playlist</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>{getFormattedPlaylistSize()}</Typography>\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                    <React.Fragment key=\"Guess Time\">\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>Guess/Answer Time</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Typography gutterBottom style={{ color: 'white' }}>{getFormattedGuessTime()}</Typography>\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                </Grid>\r\n            </Typography>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    TextField,\r\n    FormControl,\r\n    Slider,\r\n    Box,\r\n    FormLabel,\r\n    Switch,\r\n    FormGroup\r\n} from \"@material-ui/core\"\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {MersenneTwister19937} from \"random-js\";\r\n\r\nconst GreenSwitch = withStyles({\r\n    switchBase: {\r\n        color: '#0CB804',\r\n        '&$checked': {\r\n            color: '#0CB804',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#48DF40',\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst CustomSlider = withStyles({\r\n    root: {\r\n        color: \"#137E0E\"\r\n    },\r\n    track: {\r\n        height: 3,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        height: 15,\r\n        width: 15,\r\n        backgroundColor: \"#0CB804\",\r\n        border: \"2px solid currentColor\",\r\n        \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"#137E0E 0 2px 3px 1px\",\r\n        },\r\n        color: \"#0CB804\",\r\n    },\r\n    active: {}\r\n})(Slider);\r\n\r\nexport default class BlindtestCustomizerForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const playlistSize = parseInt(window.localStorage.getItem('playlist_size'))\r\n        const guessTime = parseInt(window.localStorage.getItem('guess_time'))\r\n        const waitTime = parseInt(window.localStorage.getItem('wait_time'))\r\n        const allowSameLicence = (window.localStorage.getItem('allow_same_licence') === 'true')\r\n\r\n        this.defaultplaylistSize = playlistSize ? playlistSize : 100\r\n        this.defaultGuessTime = guessTime ? guessTime : 13\r\n        this.defaultWaitTime = waitTime ? waitTime : 5\r\n\r\n        this.state = {\r\n            opened: false,\r\n            playlistSize: this.defaultplaylistSize,\r\n            guessTime: this.defaultGuessTime,\r\n            waitTime: this.defaultWaitTime,\r\n            allowSameLicence: allowSameLicence,\r\n            seed: MersenneTwister19937.autoSeed().next(),\r\n            classes:  makeStyles((theme) => ({\r\n                formControl: {\r\n                    margin: theme.spacing(1),\r\n                    minWidth: 120,\r\n                }\r\n            }))\r\n        }\r\n\r\n        this.updatePlaylistSize = this.updatePlaylistSize.bind(this);\r\n        this.updateGuessTime = this.updateGuessTime.bind(this);\r\n        this.updateWaitTime = this.updateWaitTime.bind(this);\r\n        this.handleSwitchChange = this.handleSwitchChange.bind(this);\r\n        this.updateSeed = this.updateSeed.bind(this);\r\n    }\r\n\r\n    valuetext(value) {\r\n        return `${value}`;\r\n    }\r\n\r\n    updatePlaylistSize(event) {\r\n        const newPlaylistSize = parseInt(event.target.value)\r\n\r\n        if (!newPlaylistSize) {\r\n            window.localStorage.setItem('playlist_size', '0');\r\n        }\r\n        this.setState({\r\n            playlistSize: newPlaylistSize\r\n        })\r\n        window.localStorage.setItem('playlist_size', !newPlaylistSize ? '0' : newPlaylistSize.toString())\r\n    }\r\n\r\n    updateSeed(event) {\r\n        const newSeed = parseInt(event.target.value)\r\n\r\n        if (!newSeed) {\r\n            window.localStorage.setItem('seed', '0')\r\n        }\r\n        this.setState({\r\n            seed: newSeed\r\n        })\r\n        window.localStorage.setItem('seed', !newSeed ? '0' : newSeed)\r\n    }\r\n\r\n    updateGuessTime(event) {\r\n        const actualGuessTime = this.state.guessTime\r\n        const newGuessTime = parseInt(event.target.innerText)\r\n\r\n        if (newGuessTime && actualGuessTime !== newGuessTime) {\r\n            this.setState({\r\n                guessTime: newGuessTime\r\n            })\r\n            window.localStorage.setItem('guess_time', newGuessTime.toString());\r\n        }\r\n    }\r\n\r\n    updateWaitTime(event) {\r\n        const actualWaitTime = this.state.waitTime\r\n        const newWaitTime = parseInt(event.target.innerText)\r\n\r\n\r\n        if (newWaitTime && actualWaitTime !== newWaitTime) {\r\n            this.setState({\r\n                waitTime: newWaitTime\r\n            })\r\n            window.localStorage.setItem('wait_time', newWaitTime.toString());\r\n        }\r\n    }\r\n\r\n    handleSwitchChange(event) {\r\n        window.localStorage.setItem('allow_same_licence', event.target.checked.toString())\r\n        this.setState({\r\n            allowSameLicence: event.target.checked\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" align='center' style={{ color: 'white' }}>\r\n                    Customize Blindtest\r\n                </Typography>\r\n                <Box align='center'>\r\n                    <FormControl component=\"fieldset\" style={{ marginTop: '5%' }}>\r\n                        <FormGroup>\r\n                            <FormLabel component=\"legend\" style={{ color: '#DCDDDC' }}>\r\n                                Size of Playlist\r\n                            </FormLabel>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                inputProps={{min: 0, style: { textAlign: 'center', color: 'white' }}}\r\n                                value={this.state.playlistSize}\r\n                                onChange={this.updatePlaylistSize}\r\n                                name=\"numberformat\"\r\n                                id=\"formatted-numberformat-input\"\r\n\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <FormLabel component=\"legend\" style={{ marginBottom: '40px', marginTop: '40px', color: '#DCDDDC' }}>\r\n                                Guess Time\r\n                            </FormLabel>\r\n                            <CustomSlider\r\n                                defaultValue={this.defaultGuessTime}\r\n                                onChange={this.updateGuessTime}\r\n                                getAriaValueText={this.valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"on\"\r\n                                step={1}\r\n                                marks\r\n                                min={5}\r\n                                max={20}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <FormLabel component=\"legend\" style={{ marginBottom: '40px', marginTop: '40px', color: '#DCDDDC' }}>\r\n                                Time before next Guess\r\n                            </FormLabel>\r\n                            <CustomSlider\r\n                                defaultValue={this.defaultWaitTime}\r\n                                onChange={this.updateWaitTime}\r\n                                getAriaValueText={this.valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"on\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={10}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <FormLabel component=\"legend\" style={{ marginTop: '40px', color: '#DCDDDC' }}>Allow multiple selection per Licence</FormLabel>\r\n                            <Box align='center'>\r\n                                <GreenSwitch checked={this.state.allowSameLicence} onChange={this.handleSwitchChange} name=\"allow-same_licence\"/>\r\n                            </Box>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Typography align='center' style={{ marginTop: '40px', color: '#DCDDDC' }}>\r\n                                Seed\r\n                            </Typography>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                inputProps={{style: { textAlign: 'center', color: 'white' }}}\r\n                                value={this.state.seed}\r\n                                onChange={this.updateSeed}\r\n                                name=\"seed\"\r\n                                id=\"formatted-seed-input\"\r\n\r\n                            />\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import {Link, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function Copyright() {\r\n    return (\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: '10px',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" style={{\r\n                backgroundColor: '#282D35',\r\n                color: 'white'\r\n            }}>\r\n                {'v4.6 - Copyright © '}\r\n                <Link color=\"inherit\" href=\"https://github.com/Emolitt/blindtest-generator\" target='_blank'>\r\n                    Emolitt\r\n                </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport ThemeSelectorForm from './ThemeSelectorForm';\r\nimport Review from './Review';\r\nimport clsx from \"clsx\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport PropTypes from \"prop-types\";\r\nimport BlindtestCustomizerForm from \"./BlindtestCustomizerForm\";\r\nimport HelpIcon from \"@material-ui/icons/Help\"\r\nimport { v4 } from 'uuid';\r\n\r\nimport {\r\n    CssBaseline,\r\n    AppBar,\r\n    Toolbar,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Button,\r\n    Typography,\r\n    Box,\r\n    StepConnector,\r\n    List,\r\n    ListItem,\r\n    Menu,\r\n    IconButton\r\n} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\n//Progress Bar\r\nconst QontoConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 10,\r\n        left: 'calc(-50% + 16px)',\r\n        right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            borderColor: '#0FDC06',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            borderColor: '#0FDC06',\r\n        },\r\n    },\r\n    line: {\r\n        borderColor: '#eaeaf0',\r\n        borderTopWidth: 3,\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n        color: '#eaeaf0',\r\n        display: 'flex',\r\n        height: 22,\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        color: '#0FDC06',\r\n    },\r\n    circle: {\r\n        width: 8,\r\n        height: 8,\r\n        borderRadius: '50%',\r\n        backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n        color: '#0FDC06',\r\n        zIndex: 1,\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\n\r\nfunction QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active\r\n            })}\r\n        >\r\n            {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n};\r\n\r\nconst steps = ['Select theme', 'Select Parameters', 'Validate'];\r\n\r\nexport default class Checkout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeStep: 0,\r\n            anchorEl: null,\r\n            openedHelp: false\r\n        }\r\n\r\n        this.setActiveStep = this.setActiveStep.bind(this);\r\n        this.setAnchorEl = this.setAnchorEl.bind(this);\r\n        this.handleMenu = this.handleMenu.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleNext = this.handleNext.bind(this);\r\n        this.startBlindtest = this.startBlindtest.bind(this);\r\n        this.navigateToMenu = this.navigateToMenu.bind(this);\r\n\r\n        window.localStorage.setItem('session_id', '');\r\n\r\n    }\r\n\r\n    getStepContent() {\r\n        const step = this.state.activeStep\r\n        switch (step) {\r\n            case 0:\r\n                return <ThemeSelectorForm />;\r\n            case 1:\r\n                return <BlindtestCustomizerForm />;\r\n            case 2:\r\n                return <Review />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    startBlindtest() {\r\n        window.localStorage.setItem('session_id', v4());\r\n        this.props.history.push('/blindtest');\r\n    }\r\n\r\n    setActiveStep(step) {\r\n        this.setState({\r\n            activeStep: step\r\n        })\r\n    }\r\n\r\n    setAnchorEl(anchor) {\r\n        this.setState({\r\n            anchorEl: anchor,\r\n            openedHelp: Boolean(anchor)\r\n        })\r\n    }\r\n\r\n    handleNext() {\r\n        this.setActiveStep(this.state.activeStep + 1);\r\n    };\r\n\r\n    handleBack() {\r\n        this.setActiveStep(this.state.activeStep - 1);\r\n    };\r\n\r\n    handleMenu(event) {\r\n        this.setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    handleClose() {\r\n        this.setAnchorEl(null);\r\n    };\r\n\r\n    navigateToMenu() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ overflow: 'hidden' }}>\r\n                <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n                <React.Fragment>\r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" style={{backgroundColor : '#282D35', flex: 1}}>\r\n                        <Toolbar>\r\n                            <Button onClick={this.navigateToMenu} style={{color: '#ffffff'}}>\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                                    Blindtest Generator\r\n                                </Typography>\r\n                            </Button>\r\n                            <div style={{ marginLeft: 'auto' }}>\r\n                                <IconButton\r\n                                    edge=\"end\"\r\n                                    aria-label=\"account of current user\"\r\n                                    aria-controls=\"menu-appbar\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMenu}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <HelpIcon />\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"menu-appbar\"\r\n                                    anchorEl={this.state.anchorEl}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    keepMounted\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    open={this.state.openedHelp}\r\n                                    onClose={this.handleClose}\r\n                                >\r\n                                    <Typography variant=\"h6\" align=\"center\">\r\n                                        Input List\r\n                                    </Typography>\r\n                                    <div>\r\n                                        <List>\r\n                                            <ListItem>\r\n                                                <strong>Arrow Up</strong>: Volume Up (Max 100)\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Arrow Down</strong>: Volume Down (Min 0)\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Arrow Left</strong>: Restart Current Element\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Arrow Right</strong>: Skip Element\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Space</strong>: Toggle Pause/Play\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>Escape</strong>: Go Back to Menu\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                <strong>F11</strong>: Toggle Fullscreen\r\n                                            </ListItem>\r\n                                        </List>\r\n                                    </div>\r\n                                </Menu>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Box>\r\n                        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                            Configure\r\n                        </Typography>\r\n                        <Stepper style={{backgroundColor : '#282D35'}} alternativeLabel activeStep={this.state.activeStep} connector={<QontoConnector />}>\r\n                            {steps.map((label) => (\r\n                                <Step key={label}>\r\n                                    <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                    </Box>\r\n                    <Box>\r\n                        <React.Fragment>\r\n                            {this.getStepContent()}\r\n                        </React.Fragment>\r\n                    </Box>\r\n                    <div style={{\r\n                        position: 'fixed',\r\n                        bottom: '77px',\r\n                        right: '20px'\r\n                    }}>\r\n                        {this.state.activeStep !== 0 && (\r\n                            <Button onClick={this.handleBack} style={{color : '#0FDC06'}}>\r\n                                Back\r\n                            </Button>\r\n                        )}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{backgroundColor : '#0FDC06'}}\r\n                            onClick={this.state.activeStep === steps.length - 1 ? this.startBlindtest : this.handleNext}\r\n                        >\r\n                            {this.state.activeStep === steps.length - 1 ? 'Start' : 'Next'}\r\n                        </Button>\r\n                    </div>\r\n                    <Copyright />\r\n                </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}","import firebase from \"firebase\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCc6i9P3LgnWccwerba9czccMpSLk_nUIY\",\r\n    authDomain: \"blindtest-generator-v4.firebaseapp.com\",\r\n    projectId: \"blindtest-generator-v4\",\r\n    storageBucket: \"blindtest-generator-v4.appspot.com\",\r\n    messagingSenderId: \"557555686086\",\r\n    appId: \"1:557555686086:web:4ff48d30ee9c2d65cad5c7\",\r\n    measurementId: \"G-QVSHBRHZES\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;","export default class DtoAsset {\r\n    constructor(obj) {\r\n        this.name = obj.name\r\n        this.url = obj.url\r\n    }\r\n\r\n    toJson() {\r\n        return {\r\n            name: this.name,\r\n            url: this.url\r\n        }\r\n    }\r\n}\r\n","export default class DtoAsset {\r\n    constructor(obj, uid) {\r\n        this.uid = uid\r\n        this.name = obj.name\r\n        this.theme = obj.theme\r\n        this.url = obj.url\r\n    }\r\n}\r\n","import firebase from \"./FirebaseConfig\";\r\nimport DtoAsset from \"./DtoAsset\";\r\nimport { v4 } from \"uuid\";\r\nimport DtoSuggestion from \"./DtoSuggestion\";\r\n\r\nexport default class AssetsManager {\r\n\r\n    static ThemeList = {\r\n        games: AssetsManager.getAssetsOfCollection('games'),\r\n        animes: AssetsManager.getAssetsOfCollection('animes'),\r\n        films: AssetsManager.getAssetsOfCollection('films'),\r\n        musics: AssetsManager.getAssetsOfCollection('musics')\r\n    }\r\n\r\n    /** @param {string} collectionName **/\r\n    static getAssetsOfCollection(collectionName) {\r\n        const assetList = [];\r\n\r\n        firebase.firestore().collection(collectionName).get().then(doc => {\r\n            doc.docs.forEach(element => {\r\n                assetList.push(new DtoAsset(element.data()))\r\n            })\r\n        })\r\n        return (assetList);\r\n    }\r\n\r\n    /** @param {$ObjMap} assets\r\n     * @param {string} collectionName\r\n     * **/\r\n    static setAssetsOfCollection(assets, collectionName) {\r\n        assets.forEach(asset => {\r\n            firebase.firestore().collection(collectionName).doc(asset.name).set(asset)\r\n        })\r\n    }\r\n\r\n    /** @param {string} collection\r\n     * @param {string} assetName\r\n     * @param {string} link\r\n     * **/\r\n    static HandleError(collection, assetName, link) {\r\n        //TODO en cours de dev. trouver comment on peut supprimer un element d'un array\r\n        /*\r\n        const assetRef = firebase.firestore().collection(collection).doc(assetName)\r\n        assetRef.update({\r\n            url: firebase.firestore().FieldValue.delete()\r\n        })*/\r\n    }\r\n\r\n    /** @param {$ObjMap} asset **/\r\n    static suggestNewAsset(asset) {\r\n        const uid = v4()\r\n        firebase.firestore().collection('suggestions').doc(uid).set(asset)\r\n    }\r\n\r\n    static getSuggestions() {\r\n        const assetList = [];\r\n\r\n        firebase.firestore().collection('suggestions').get().then(doc => {\r\n            doc.docs.forEach(element => {\r\n                assetList.push(new DtoSuggestion(element.data(), element.id))\r\n            })\r\n        })\r\n        return (assetList);\r\n    }\r\n\r\n    /** @param {$ObjMap} suggestion\r\n     * @param {boolean} validate\r\n     *  **/\r\n    static HandleSuggestion(suggestion, validate) {\r\n        //FIXME il ne s'est rien passé\r\n        if (validate) {\r\n            firebase.firestore().collection(suggestion.theme).doc(suggestion.name).get().then(doc => {\r\n                const data = new DtoAsset(doc.data());\r\n                data.url = data.url.concat(suggestion.url)\r\n                firebase.firestore().collection(suggestion.theme).doc(suggestion.name).set(data.toJson())\r\n            }).catch(err => {\r\n                firebase.firestore().collection(suggestion.theme).doc(suggestion.name).set(new DtoAsset(suggestion).toJson())\r\n            })\r\n        }\r\n        firebase.firestore().collection('suggestions').doc(suggestion.uid).delete()\r\n    }\r\n}\r\n\r\n","//const fs = require('fs');\r\nimport { Random, MersenneTwister19937 } from 'random-js';\r\n//const path = require('path');\r\nimport AssetsManager from \"../Database/AssetsManager\";\r\n\r\nconst ThemeList = {\r\n    games: AssetsManager.ThemeList.games,\r\n    animes: AssetsManager.ThemeList.animes,\r\n    films: AssetsManager.ThemeList.films,\r\n    musics: AssetsManager.ThemeList.musics,\r\n}\r\n\r\nclass SelectionGenerator {\r\n    random = new Random(MersenneTwister19937.autoSeed());\r\n\r\n    setSeed(seed) {\r\n        this.random = new Random(MersenneTwister19937.seed(seed));\r\n    }\r\n\r\n    FlatMapAssets(assets) {\r\n        //isolate wanted number of selection\r\n        const flatMappedAssets = assets.map(asset => {\r\n            const flatMappedAsset = asset.url.map(url => {\r\n                const fullName = asset.name.concat(url.name ? ` - ${url.name}` : '');\r\n                return ({\r\n                    name: fullName,\r\n                    url:  url.link.split('=')[1],\r\n                    start: url.start\r\n                })\r\n            })\r\n            return (flatMappedAsset)\r\n        })\r\n\r\n        return (this.random.shuffle(flatMappedAssets.flat(1)))\r\n    }\r\n\r\n    EqualizeAllGenreSelection(size, reuseAsset) {\r\n        let partSize = size / Object.keys(ThemeList).length;\r\n\r\n        if (partSize <= 0) {\r\n            partSize = 1;\r\n        }\r\n\r\n        return  this.GenerateSelectionFromJSON('games', partSize, reuseAsset)\r\n            .concat(this.GenerateSelectionFromJSON('animes', partSize, reuseAsset))\r\n            .concat(this.GenerateSelectionFromJSON('films', partSize, reuseAsset))\r\n            .concat(this.GenerateSelectionFromJSON('musics', partSize, reuseAsset));\r\n    }\r\n\r\n    GenerateSelectionFromJSON(theme, size, reuseGame) {\r\n        let assets;\r\n        if (theme === 'all') {\r\n            return this.random.shuffle(this.EqualizeAllGenreSelection(size, reuseGame));\r\n        } else {\r\n            if(!(theme in ThemeList)) {\r\n                return []\r\n            }\r\n            assets = this.random.shuffle(ThemeList[theme]);\r\n        }\r\n\r\n        if (reuseGame === true) {\r\n            const flatMappedAssets = this.FlatMapAssets(assets)\r\n\r\n            //isolate wanted number of selection\r\n            return (flatMappedAssets.slice(0, size));\r\n        }\r\n\r\n        //isolate wanted number of selection\r\n        const selectionArray = assets.slice(0, size);\r\n\r\n        //get random info to display for each selection\r\n        const parsedSelectionArray = selectionArray.map(asset => {\r\n            const winnerChoice = this.random.shuffle(asset.url)[0];\r\n            const fullName = asset.name.concat(winnerChoice.name ? ` - ${winnerChoice.name}` : '');\r\n            return ({\r\n                name: fullName,\r\n                url: winnerChoice.link.split('=')[1],\r\n                start: winnerChoice.start\r\n            })\r\n        })\r\n\r\n        return(parsedSelectionArray);\r\n    }\r\n\r\n}\r\n\r\nconst selectionGenerator = new SelectionGenerator();\r\n\r\nexport {\r\n    selectionGenerator\r\n};\r\n\r\n/*function getDirectories(source) {\r\n    const dirs = fs.readdir(source, { withFileTypes: true }, err => {console.log('error: ' + err)})\r\n\r\n    if (dirs === undefined) {\r\n        console.log(\"failed to read directory: \" + source);\r\n        return undefined;\r\n    }\r\n    return (dirs.filter(dirent => dirent.isDirectory())\r\n        .map(dirent => dirent.name));\r\n}*/\r\n\r\n/*const getAbsolutePath = source => path.resolve(source);\r\n\r\nconst getDirectories = source =>\r\n    fs.readdirSync(source, { withFileTypes: true })\r\n        .filter(dirent => dirent.isDirectory())\r\n        .map(dirent => dirent.name);\r\n\r\nconst getFiles = source =>\r\n    fs.readdirSync(source, { withFileTypes: true })\r\n        .filter(dirent => dirent.isFile())\r\n        .map(dirent => dirent.name);*/\r\n\r\n/*function GenerateSelection(assetsPath, size) {\r\n    const absPath = getAbsolutePath(assetsPath);\r\n    console.log(absPath)\r\n    //getting shuffled list of assets in specified dir\r\n    const assets = random.shuffle(getDirectories(absPath));\r\n    let selectionArray = [];\r\n    let parsedSelectionArray = [];\r\n\r\n    //console.log(assets);\r\n\r\n    //isolate wanted number of selection\r\n    for (let i = 0; i < size; i++) {\r\n        if (i >= assets.length) {\r\n            break;\r\n        }\r\n        selectionArray.push(assets[i]);\r\n    }\r\n\r\n    //get random info to display for each selection\r\n    selectionArray.forEach(asset => {\r\n        const music = (absPath + '/' + asset + '/musics/' + random.shuffle(getFiles(absPath + '/' + asset + '/musics'))[0]).replace(/\\\\/g, '/');\r\n        const background = (absPath + '/' + asset + '/backgrounds/' + random.shuffle(getFiles(absPath + '/' + asset + '/backgrounds'))[0]).replace(/\\\\/g, '/');\r\n        parsedSelectionArray.push({\r\n            music: music,\r\n            image: background,\r\n        });\r\n    });\r\n\r\n    return (parsedSelectionArray);\r\n}*/\r\n\r\n/*export const checkAssetsDirectory = (path) => {\r\n    console.log(path);\r\n    const assets = getDirectories(path);\r\n\r\n    for (let i = 0; i < assets.length; i++) {\r\n        const dirs = getDirectories(path + '/' + assets[i]);\r\n        if (dirs.length === 2) {\r\n            if (dirs[0] !== 'backgrounds' || dirs[1] !== 'musics') {\r\n                return assets[i];\r\n            } else {\r\n                const filesBG = getFiles(path + '/' + assets[i] + '/backgrounds');\r\n                const filesMusics = getFiles(path + '/' + assets[i] + '/musics');\r\n\r\n                if (filesBG.length <= 0 || filesMusics <= 0) {\r\n                    return assets[i];\r\n                }\r\n            }\r\n        } else {\r\n            return assets[i];\r\n        }\r\n    }\r\n    return undefined;\r\n}*/\r\n\r\n\r\n","\r\nfunction HandleVolumeUp(player) {\r\n    const volume = player.getVolume()\r\n\r\n    player.setVolume(volume + 10)\r\n}\r\n\r\nfunction HandleVolumeDown(player) {\r\n    const volume = player.getVolume()\r\n\r\n    player.setVolume(volume - 10)\r\n}\r\n\r\nfunction HandlePause(player) {\r\n    const status = player.getPlayerState()\r\n\r\n    if (status === 1) {\r\n        player.pauseVideo()\r\n    } else if (status === 2) {\r\n        player.playVideo()\r\n    }\r\n}\r\n\r\nconst KeyboardEvents = {\r\n    HandleVolumeDown: HandleVolumeDown,\r\n    HandleVolumeUp: HandleVolumeUp,\r\n    HandlePause: HandlePause\r\n}\r\n\r\nexport default KeyboardEvents;\r\n","import React from \"react\";\r\nimport {selectionGenerator} from '../Generator/SelectionGenerator'\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport KeyboardEvents from './KeyboardEvent';\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst Status = {\r\n    None: -1,\r\n    Play: 1,\r\n    Pause: 2,\r\n    Restart: 3,\r\n    Pass: 4\r\n}\r\n\r\nexport default class BlindtestGenerator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const sessionId = window.localStorage.getItem('session_id');\r\n        const seed = window.localStorage.getItem('seed');\r\n\r\n        //Playlist Configuration\r\n        const playlistSize = window.localStorage.getItem('playlist_size')\r\n        const allowSameLicence = (window.localStorage.getItem('allow_same_licence') === 'true')\r\n        const theme = window.localStorage.getItem('theme')\r\n\r\n        //Session Configuration\r\n        this.guessTime = parseInt(window.localStorage.getItem('guess_time'))\r\n        this.waitTime = parseInt(window.localStorage.getItem('wait_time'))\r\n\r\n        selectionGenerator.setSeed(seed)\r\n        this.playlist = selectionGenerator.GenerateSelectionFromJSON(theme, playlistSize, allowSameLicence)\r\n\r\n        this.state = {\r\n            display: false,\r\n            status: Status.None,\r\n            counter: this.guessTime,\r\n            player: undefined,\r\n            playerObj: null,\r\n            playlistIndex: 0,\r\n            currMusic: null,\r\n            loaded: false,\r\n            error: false,\r\n            stop: false\r\n        }\r\n\r\n        this.nextGuess = this.nextGuess.bind(this)\r\n        this.updatePlayer = this.updatePlayer.bind(this)\r\n        this._onError = this._onError.bind(this)\r\n        this._onPlay = this._onPlay.bind(this)\r\n        this._onReady = this._onReady.bind(this)\r\n        this.startGuessTime = this.startGuessTime.bind(this)\r\n        this.startAnswerTime = this.startAnswerTime.bind(this)\r\n        this.handleKeyDown = this.handleKeyDown.bind(this)\r\n        //this._onStateChange = this._onStateChange.bind(this)\r\n\r\n        if (this.playlist.length === 0 || !sessionId) {\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    //---------------------------------------------------------Iframe Handler\r\n    _onReady = (event) => {\r\n        // access to player in all event handlers via event.target\r\n        event.target.playVideo();\r\n        this.setState({\r\n            playerObj: event.target\r\n        })\r\n        console.log(\"ready to play video\")\r\n    }\r\n\r\n    _onPlay = (event) => {\r\n        // access to player in all event handlers via event.target\r\n        //event.target.pauseVideo();\r\n        console.log(\"video started\")\r\n        this.setState({\r\n            loaded: true,\r\n            playlistIndex: this.state.playlistIndex + 1\r\n        });\r\n    }\r\n\r\n    _onEnd = (event) => {\r\n        // access to player in all event handlers via event.target\r\n        event.target.stopVideo();\r\n        console.log(\"stop video\");\r\n        //this.nextGuess(true)\r\n    }\r\n\r\n    _onError = (event) => {\r\n        // access to player in all event handlers via event.target\r\n        alert(`[${this.state.currMusic.name}]: Failed to load video with id: ${this.state.currMusic.url}`)\r\n        this.setState({\r\n            error: true\r\n        })\r\n        //this.nextGuess(true)\r\n    }\r\n\r\n    _onStateChange = (event) => {\r\n        //Can do something with all states here\r\n        console.log(\"state changed: \" + event.data)\r\n        const code = event.data;\r\n        switch (code) {\r\n            case -1:\r\n                break\r\n            case 1:\r\n                break\r\n            case 2:\r\n                break\r\n            case 5:\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        /*\r\n        -1 (unstarted)\r\n        0 (ended)\r\n        1 (playing)\r\n        2 (paused)\r\n        3 (buffering)\r\n        5 (video cued).\r\n         */\r\n    }\r\n\r\n    //---------------------------------------------------------Player Config\r\n    updatePlayer = (shift) => {\r\n        let timeoutCounter = 10;\r\n        this.setState({\r\n            loaded: false,\r\n            error: false\r\n        });\r\n        return new Promise((resolve, reject) => {\r\n            if (this.playlist.length === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n\r\n            const music = shift === true ? this.playlist.shift() : this.playlist[0];\r\n\r\n            //console.log(\"Loading music: \" + music.name);\r\n            const opt = {\r\n                height: window.screen.height - 5,\r\n                width: window.screen.width,\r\n                playerVars: {\r\n                    // https://developers.google.com/youtube/player_parameters\r\n                    autoplay: 1,\r\n                    start: music.start,\r\n                    end: music.start + this.guessTime + this.answerTime,\r\n                    fs: 0,\r\n                    origin: window.location,\r\n                }\r\n            }\r\n            console.log(\"init Player\");\r\n            this.setState({\r\n                currMusic: music,\r\n                player: <YouTube videoId={music.url}\r\n                                opts={opt}\r\n                                onReady={this._onReady}\r\n                                onPlay={this._onPlay}\r\n                                onEnd={this._onEnd}\r\n                                onError={this._onError}\r\n                                onStateChange={this._onStateChange}\r\n                />\r\n            });\r\n\r\n            const timer = setInterval(() => {\r\n                timeoutCounter--;\r\n                if (this.state.loaded === true) {\r\n                    clearInterval(timer);\r\n                    resolve();\r\n                } else if (timeoutCounter <= 0 || this.state.error === true) {\r\n                    console.log(\"Failed to load music\");\r\n                    clearInterval(timer);\r\n                    reject();\r\n                }\r\n            }, 1000);\r\n        })\r\n    }\r\n\r\n    nextGuess(shift) {\r\n        const sessionId = window.localStorage.getItem('session_id');\r\n        if (!sessionId) {\r\n            return ;\r\n        }\r\n        console.log(\"Starting new guess\");\r\n        this.updatePlayer(shift).then(() => {\r\n            this.setState({\r\n                status: Status.Play,\r\n                counter: this.guessTime\r\n            })\r\n            this.startGuessTime();\r\n        }).catch(() => {\r\n            console.log(\"erreur du chargement de la music\");\r\n            if (this.playlist.length === 0) {\r\n                this.props.history.push('/')\r\n            } else {\r\n                this.nextGuess(shift);\r\n            }\r\n        })\r\n    }\r\n\r\n    //---------------------------------------------------------Player Status\r\n    doneAction = (timer, nextGuess) => {\r\n        clearInterval(timer)\r\n        this.setState({\r\n            status: Status.None,\r\n            display: false,\r\n            counter: this.guessTime\r\n        })\r\n        this.nextGuess(nextGuess)\r\n    }\r\n\r\n    checkStatus = (timer) => {\r\n        switch (this.state.status) {\r\n            case Status.Pause:\r\n                return true\r\n            case Status.Restart:\r\n                this.doneAction(timer,false)\r\n                return true\r\n            case Status.Pass:\r\n                this.doneAction(timer,true)\r\n                return\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    //---------------------------------------------------------Timers\r\n    startAnswerTime() {\r\n        const timer = setInterval(() => {\r\n            //check status\r\n            if (this.checkStatus(timer)) {\r\n                return;\r\n            }\r\n            const counter = this.state.counter\r\n            if (counter === 0) {\r\n                this.doneAction(timer,true)\r\n            } else {\r\n                this.setState({\r\n                    counter: counter - 1\r\n                })\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    startGuessTime() {\r\n        const timer = setInterval(() => {\r\n            //check status\r\n            if (this.checkStatus(timer)) {\r\n                return;\r\n            }\r\n            const counter = this.state.counter\r\n            if (counter === 1) {\r\n                clearInterval(timer)\r\n                this.setState({\r\n                    display: true,\r\n                    counter: this.waitTime\r\n                })\r\n                this.startAnswerTime()\r\n            } else {\r\n                this.setState({\r\n                    counter: counter - 1\r\n                })\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    //---------------------------------------------------------User Inputs\r\n    handleKeyDown(key, event) {\r\n        if (this.state.player === null) {\r\n            return\r\n        }\r\n        console.log(\"receiving key: \" + key)\r\n        switch (key) {\r\n            case 'up':\r\n                KeyboardEvents.HandleVolumeUp(this.state.playerObj)\r\n                break\r\n            case 'down':\r\n                KeyboardEvents.HandleVolumeDown(this.state.playerObj)\r\n                break\r\n            case 'left':\r\n                this.setState({\r\n                    status: Status.Restart\r\n                })\r\n                break\r\n            case 'right':\r\n                this.setState({\r\n                    status: Status.Pass\r\n                })\r\n                break\r\n            case 'space':\r\n                this.setState({\r\n                    status: this.state.status === Status.Pause ? Status.Play : Status.Pause\r\n                })\r\n                //fix player non reconnu\r\n                KeyboardEvents.HandlePause(this.state.playerObj)\r\n                break\r\n            case 'esc':\r\n                //TODO arreter le chargement des autres musiques\r\n                this.props.history.push('/')\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    //---------------------------------------------------------Renderer\r\n    componentWillMount() {\r\n        this.nextGuess(true);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Helmet bodyAttributes={{style: 'background-color : #242629'}}/>\r\n            {!this.state.display &&\r\n            <div style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                fontSize: '200px',\r\n                color: '#BFC6D0',\r\n                fontWeight: 'bold'\r\n            }}>\r\n                {this.state.counter}\r\n            </div>\r\n            }\r\n            <div style={{ display: this.state.display ? '' : 'none', position: 'relative' }}>\r\n                <div style={{ position: 'absolute'}}>\r\n                    {this.state.player}\r\n                </div>\r\n                <div style={{ position: 'absolute', 'z-index': 1, margin: '10px', color: '#ffffff', fontWeight: 'bold', fontSize: '50px', 'text-transform': 'capitalize' }}>\r\n                    {this.state.currMusic.name}\r\n                </div>\r\n            </div>\r\n            <div style={{ display: 'none' }}>\r\n                <KeyboardEventHandler\r\n                    handleKeys={['up', 'down', 'left', 'right', 'space', 'esc']}\r\n                    onKeyEvent={this.handleKeyDown} />\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\nconst containerController = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {backgroundColor : customColor,\r\n        marginTop: '8%',\r\n        width: '40%',\r\n        height: '50px'\r\n    }\r\n}\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.navigateToCheckout = this.navigateToCheckout.bind(this)\r\n        this.navigateToAssets = this.navigateToAssets.bind(this)\r\n        this.navigateToContributors = this.navigateToContributors.bind(this)\r\n    }\r\n\r\n    navigateToCheckout() {\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    navigateToAssets() {\r\n        this.props.history.push('/assets');\r\n    }\r\n\r\n    navigateToContributors() {\r\n        this.props.history.push('/contributors');\r\n    }\r\n\r\n    render() {\r\n        return <div style={{ overflow: 'hidden' }}>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <div style={containerController}>\r\n                <p style={{color: 'white'}}>Update: Some music are now named ! This add more challenges during session !</p>\r\n                <Button variant=\"contained\" style={buttonStyle('#0FDC06')} onClick={this.navigateToCheckout}>\r\n                    Generate Blindtest\r\n                </Button>\r\n                <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToAssets}>\r\n                    See Assets Library\r\n                </Button>\r\n                <Button variant=\"contained\" style={buttonStyle('#b53ad6')} onClick={this.navigateToContributors}>\r\n                    See contributors\r\n                </Button>\r\n            </div>\r\n            <Copyright />\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\nconst containerController = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    color: 'white'\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {\r\n        backgroundColor : customColor,\r\n        marginTop: '1%',\r\n        marginLeft: '1%',\r\n        width: '10%',\r\n        height: '40px'\r\n    }\r\n}\r\n\r\nexport default class ContributorsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.navigateToMenu = this.navigateToMenu.bind(this)\r\n    }\r\n\r\n    navigateToMenu() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return <div style={{ overflow: 'hidden' }}>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToMenu}>\r\n                Menu\r\n            </Button>\r\n            <div style={containerController}>\r\n                <Typography color='inherit'>Work In Progress..</Typography>\r\n            </div>\r\n            <Copyright />\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText, Button\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport PropTypes from 'prop-types';\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AssetsManager from \"../Database/AssetsManager\";\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        <ListItem style={style} key={index}>\r\n            <ListItemText primary={`Item ${index + 1}`} />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nconst classes = {\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: '#d01a1a',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    listSection: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n        backgroundColor: 'inherit',\r\n        padding: 0,\r\n    },\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {\r\n        backgroundColor : customColor,\r\n        marginTop: '1%',\r\n        marginLeft: '1%',\r\n        width: '10%',\r\n        height: '40px'\r\n    }\r\n}\r\n\r\n\r\nexport default class AssetsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'selection-games': {},\r\n            'selection-animes': {},\r\n            'selection-films': {}\r\n        }\r\n\r\n        this.onListSearchUpdate = this.onListSearchUpdate.bind(this)\r\n        this.navigateToMenu = this.navigateToMenu.bind(this)\r\n        this.navigateToSuggest = this.navigateToSuggest.bind(this)\r\n    }\r\n\r\n    redirectToUrl(event, url) {\r\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) {\r\n            newWindow.opener = null\r\n        }\r\n    }\r\n\r\n    onListSearchUpdate(event, value) {\r\n        const stateObject = function () {\r\n            const returnObj = {};\r\n            const key = event.target.id.split('-')[2]\r\n            if (!key) {\r\n                returnObj['selection-games'] = {};\r\n                returnObj['selection-animes'] = {};\r\n                returnObj['selection-films'] = {};\r\n            } else {\r\n                const associatedKey = `selection-${key}`.toLowerCase()\r\n                returnObj[associatedKey] = value !== null ? value : {};\r\n            }\r\n            return returnObj;\r\n        }();\r\n\r\n        this.setState(stateObject)\r\n    }\r\n\r\n    renderAssetList(asset, name) {\r\n        /*return <div>\r\n            <FixedSizeList height={400} width={300} itemSize={46} itemCount={length}>\r\n                {renderRow}\r\n            </FixedSizeList>\r\n        </div>*/\r\n        const associatedKey = `selection-${name}`.toLowerCase()\r\n\r\n        if (!this.state[associatedKey] || !this.state[associatedKey].url) {\r\n            return <div/>\r\n        }\r\n        return <div style={classes.root}>\r\n            <List style={{backgroundColor: '#ffffff', color: '#000000'}} subheader={<li />}>\r\n                {this.state[associatedKey].url.map((element) => (\r\n                    <li key={element.link} style={classes.listSection}>\r\n                        <ul style={classes.ul}>\r\n                            <ListItem button onClick={event => this.redirectToUrl(event, element.link)} key={`item-${element.link}`}>\r\n                                <ListItemText primary={element.link} />\r\n                            </ListItem>\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    }\r\n\r\n    renderAssetSearch(asset, name) {\r\n        const associatedValue = `selection-${name}`\r\n        return <div style={{\r\n            backgroundColor: '#ffffff',\r\n            display: 'inline-block',\r\n            'verticalAlign': 'middle'}}>\r\n            <Autocomplete color='inherit'\r\n                          onChange={this.onListSearchUpdate}\r\n                          id={`combo-box-${name}`}\r\n                          options={asset}\r\n                          getOptionLabel={(option) => option.name}\r\n                          style={{ width: 300 }}\r\n                          renderInput={(params) => <TextField {...params} value={this.state[associatedValue]} label={name} variant=\"outlined\" />}\r\n            />\r\n            {this.renderAssetList(asset, name)}\r\n        </div>\r\n    }\r\n\r\n    navigateToMenu() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    navigateToSuggest() {\r\n        AssetsManager.setAssetsOfCollection(require('../Assets/musiques.json'), 'musics')\r\n        AssetsManager.setAssetsOfCollection(require('../Assets/game.json'), 'games')\r\n        AssetsManager.setAssetsOfCollection(require('../Assets/anime.json'), 'animes')\r\n        //this.props.history.push('/assets/suggest')\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToMenu}>\r\n                Menu\r\n            </Button>\r\n            <div style={{\r\n                width: '50%',\r\n                height: '50%',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}>\r\n                {this.renderAssetSearch(AssetsManager.ThemeList.games, 'Games')}\r\n                {this.renderAssetSearch(AssetsManager.ThemeList.animes, 'Animes')}\r\n                {this.renderAssetSearch(AssetsManager.ThemeList.films, 'Films')}\r\n                {this.renderAssetSearch(AssetsManager.ThemeList.musics, 'Musics')}\r\n            </div>\r\n            <div  style={{\r\n                position: 'fixed',\r\n                bottom: '77px',\r\n                right: '20px'\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor : '#0FDC06'}}\r\n                    onClick={this.navigateToSuggest}\r\n                >\r\n                   Suggest Asset\r\n                </Button>\r\n            </div>\r\n            <Copyright />\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {Box, Button, FormControl, List, ListItem} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AssetsManager from \"../Database/AssetsManager\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Copyright from \"../Copyright\";\r\n\r\nconst classes = {\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: '#d01a1a',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    listSection: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n        backgroundColor: 'inherit',\r\n        padding: 0,\r\n    },\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {\r\n        backgroundColor : customColor,\r\n        marginTop: '1%',\r\n        marginLeft: '1%',\r\n        width: '10%',\r\n        height: '40px'\r\n    }\r\n}\r\n\r\nexport default class SuggestPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            assetName: \"\",\r\n            theme: \"games\",\r\n            urlList: []\r\n        }\r\n        this.navigateToAssets = this.navigateToAssets.bind(this)\r\n        this.submitSuggestion = this.submitSuggestion.bind(this)\r\n        this.onAssetSearchChange = this.onAssetSearchChange.bind(this)\r\n        this.onAssetSubmitChange = this.onAssetSubmitChange.bind(this)\r\n        this.setOpen = this.setOpen.bind(this)\r\n        this.handleOpen = this.handleOpen.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onAddUrl = this.onAddUrl.bind(this)\r\n        this.onRemoveUrl = this.onRemoveUrl.bind(this)\r\n        this.onChangeUrl = this.onChangeUrl.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            theme: event.target.value\r\n        })\r\n    };\r\n    setOpen(state) {\r\n        this.setState({\r\n            opened: state\r\n        })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setOpen(false);\r\n    }\r\n\r\n    handleOpen() {\r\n        this.setOpen(true);\r\n    }\r\n\r\n    onAssetSubmitChange(event, value) {\r\n        this.setState({\r\n            assetName: value ? value.name : \"\"\r\n        })\r\n    }\r\n\r\n    onAssetSearchChange(event) {\r\n        const value = event.target.value\r\n        this.setState({\r\n            assetName: value ? value : \"\"\r\n        })\r\n    }\r\n\r\n    onAddUrl(event) {\r\n        this.state.urlList.push({\r\n            link: \"\",\r\n            start: 0\r\n        })\r\n        this.setState({\r\n            urlList: this.state.urlList\r\n        })\r\n    }\r\n\r\n    onRemoveUrl(index) {\r\n        const isUrlFound = index >= 0 && index < this.state.urlList.length\r\n\r\n        if (isUrlFound) {\r\n            this.state.urlList.splice(index, 1)\r\n            this.setState({\r\n                urlList: this.state.urlList\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeUrl(index, value, isLink) {\r\n        const isUrlFound = index >= 0 && index < this.state.urlList.length\r\n\r\n        if (isUrlFound) {\r\n            const urlList = this.state.urlList\r\n            if (isLink) {\r\n                urlList[index].link = value\r\n            } else {\r\n                urlList[index].start = parseInt(value)\r\n            }\r\n            this.setState({\r\n                urlList: urlList\r\n            })\r\n        }\r\n    }\r\n\r\n    renderAssetSearch(asset, name) {\r\n        return <div style={{\r\n            backgroundColor: '#ffffff',\r\n            display: 'inline-block',\r\n            'verticalAlign': 'middle'}}>\r\n            <Autocomplete freeSolo color='inherit'\r\n                          onInput={this.onAssetSearchChange}\r\n                          onChange={this.onAssetSubmitChange}\r\n                          id={`combo-box-${name}`}\r\n                          options={asset}\r\n                          getOptionLabel={(option) => option.name}\r\n                          style={{ width: 300 }}\r\n                          renderInput={(params) => <TextField {...params} value={this.state.assetName} label={name} variant=\"outlined\" />}\r\n            />\r\n        </div>\r\n    }\r\n\r\n    renderUrlList() {\r\n        return <div style={classes.root}>\r\n            <List style={{backgroundColor: '#ffffff', color: '#000000'}} subheader={<li />}>\r\n                {this.state.urlList.map((element, index) => {\r\n                    return <li key={index} style={classes.listSection}>\r\n                        <ul style={classes.ul}>\r\n                            <ListItem key={`item-${index}`}>\r\n                                <TextField value={element.link} label=\"link\" onChange={(event) => this.onChangeUrl(index, event.target.value, true)}/>\r\n                                <TextField type=\"number\" value={element.start} label=\"start\" onChange={(event) => this.onChangeUrl(index, event.target.value, false)}/>\r\n                                <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon/>} onClick={event => this.onRemoveUrl(index)} />\r\n                            </ListItem>\r\n                        </ul>\r\n                    </li>\r\n                })}\r\n            </List>\r\n        </div>\r\n    }\r\n\r\n    submitSuggestion() {\r\n        //Submit\r\n        /*\r\n        assetName: \"\",\r\n            theme: \"games\",\r\n            urlList: []\r\n         */\r\n        const name = this.state.assetName\r\n        const theme = this.state.theme\r\n        const url = this.state.urlList\r\n\r\n        if (!name || !theme || url.length <= 0) {\r\n            console.log(name)\r\n            alert(\"missing arguments name or theme or url\")\r\n            return\r\n        }\r\n\r\n        let error = false\r\n        url.forEach((link, index) => {\r\n            if (!link.link || link.start < 0) {\r\n                alert(\"Wrong argument in url nb \" + index)\r\n                error = true\r\n            }\r\n        })\r\n\r\n        if (error) {\r\n            return\r\n        }\r\n\r\n        const asset = {\r\n            theme: theme,\r\n            name: name,\r\n            url: url\r\n        }\r\n        AssetsManager.suggestNewAsset(asset)\r\n    }\r\n\r\n    navigateToAssets() {\r\n        this.props.history.push('/assets')\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToAssets}>\r\n                Cancel\r\n            </Button>\r\n            <Box align='center'>\r\n                <FormControl component=\"fieldset\" style={{ marginTop: '5%' }}>\r\n                    <Select\r\n                        labelId=\"select-asset-theme\"\r\n                        id=\"select-asset-theme\"\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        onOpen={this.handleOpen}\r\n                        value={this.state.theme}\r\n                        onChange={this.handleChange}\r\n                        style={{backgroundColor: '#ffffff'}}\r\n                        inputProps={{\r\n                            style: {\r\n                                color: 'white'\r\n                            }\r\n                        }}\r\n                    >\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value='games'>Video Games</MenuItem>\r\n                        <MenuItem value='animes'>Anime</MenuItem>\r\n                        <MenuItem value='films'>Films</MenuItem>\r\n                        <MenuItem value='musics'>Musics</MenuItem>\r\n                    </Select>\r\n                    {this.state.theme === 'games' && this.renderAssetSearch(AssetsManager.ThemeList.games, \"Asset Name\")}\r\n                    {this.state.theme === 'animes' && this.renderAssetSearch(AssetsManager.ThemeList.animes, \"Asset Name\")}\r\n                    {this.state.theme === 'films' && this.renderAssetSearch(AssetsManager.ThemeList.films, \"Asset Name\")}\r\n                    {this.state.theme === 'musics' && this.renderAssetSearch(AssetsManager.ThemeList.musics, \"Asset Name\")}\r\n                    {this.renderUrlList()}\r\n                    {this.state.theme && <Button variant=\"contained\" style={{backgroundColor: '#4a6b58'}} onClick={this.onAddUrl}>\r\n                        Add Url\r\n                    </Button>}\r\n                </FormControl>\r\n            </Box>\r\n            <div  style={{\r\n                position: 'fixed',\r\n                bottom: '77px',\r\n                right: '20px'\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor : '#0FDC06'}}\r\n                    onClick={this.submitSuggestion}\r\n                >\r\n                    Suggest Asset\r\n                </Button>\r\n            </div>\r\n            <Copyright/>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText, Button\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport PropTypes from 'prop-types';\r\nimport {Helmet} from \"react-helmet\";\r\nimport Copyright from \"../Copyright\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AssetsManager from \"../Database/AssetsManager\";\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    return (\r\n        <ListItem style={style} key={index}>\r\n            <ListItemText primary={`Item ${index + 1}`} />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nconst classes = {\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: '#d01a1a',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    listSection: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n        backgroundColor: 'inherit',\r\n        padding: 0,\r\n    },\r\n}\r\n\r\nconst buttonStyle = (customColor) => {\r\n    return {\r\n        backgroundColor : customColor,\r\n        marginTop: '1%',\r\n        marginLeft: '1%',\r\n        width: '10%',\r\n        height: '40px'\r\n    }\r\n}\r\n\r\n\r\nexport default class AdminSuggestionPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'selection-suggestions': {}\r\n        }\r\n\r\n        this.onListSearchUpdate = this.onListSearchUpdate.bind(this)\r\n        this.navigateToMenu = this.navigateToMenu.bind(this)\r\n        this.navigateToSuggest = this.navigateToSuggest.bind(this)\r\n        this.handleSuggestion = this.handleSuggestion.bind(this)\r\n    }\r\n\r\n    redirectToUrl(event, url) {\r\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) {\r\n            newWindow.opener = null\r\n        }\r\n    }\r\n\r\n    onListSearchUpdate(event, value) {\r\n        const stateObject = function () {\r\n            const returnObj = {};\r\n            const key = event.target.id.split('-')[2]\r\n            if (!key) {\r\n                returnObj['selection-suggestions'] = {};\r\n            } else {\r\n                const associatedKey = `selection-${key}`.toLowerCase()\r\n                returnObj[associatedKey] = value !== null ? value : {};\r\n            }\r\n            return returnObj;\r\n        }.bind(event)();\r\n\r\n        this.setState(stateObject)\r\n    }\r\n\r\n    renderAssetList(asset, name) {\r\n        /*return <div>\r\n            <FixedSizeList height={400} width={300} itemSize={46} itemCount={length}>\r\n                {renderRow}\r\n            </FixedSizeList>\r\n        </div>*/\r\n        const associatedKey = `selection-${name}`.toLowerCase()\r\n\r\n        if (!this.state[associatedKey] || !this.state[associatedKey].url) {\r\n            return <div/>\r\n        }\r\n        return <div style={classes.root}>\r\n            <List style={{backgroundColor: '#ffffff', color: '#000000'}} subheader={<li />}>\r\n                {this.state[associatedKey].url.map((element) => (\r\n                    <li key={element.link} style={classes.listSection}>\r\n                        <ul style={classes.ul}>\r\n                            <ListItem button onClick={event => this.redirectToUrl(event, element.link)} key={`item-${element.link}`}>\r\n                                <ListItemText primary={element.link} />\r\n                                <ListItemText primary={element.start} />\r\n                            </ListItem>\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    }\r\n\r\n    renderAssetSearch(asset, name) {\r\n        const associatedValue = `selection-${name}`\r\n        return <div style={{\r\n            backgroundColor: '#ffffff',\r\n            display: 'inline-block',\r\n            'verticalAlign': 'middle'}}>\r\n            <Autocomplete color='inherit'\r\n                          onChange={this.onListSearchUpdate}\r\n                          id={`combo-box-${name}`}\r\n                          options={asset}\r\n                          getOptionLabel={(option) => `${option.name} (${option.theme})`}\r\n                          style={{ width: 300 }}\r\n                          renderInput={(params) => <TextField {...params} value={this.state[associatedValue]} label={name} variant=\"outlined\" />}\r\n            />\r\n            {this.renderAssetList(asset, name)}\r\n        </div>\r\n    }\r\n\r\n    /** @param {boolean} validate */\r\n    handleSuggestion(validate) {\r\n\r\n        console.log(\"handle suggestion with validation: \" + validate)\r\n        //validate: true or false\r\n        const suggestion = this.state['selection-suggestions']\r\n\r\n        if (suggestion) {\r\n            AssetsManager.HandleSuggestion(suggestion, validate)\r\n        }\r\n    }\r\n\r\n    navigateToMenu() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    navigateToSuggest() {\r\n        this.props.history.push('/assets/suggest')\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Helmet bodyAttributes={{style: 'background-color : #282D35'}}/>\r\n            <Button variant=\"contained\" style={buttonStyle('#4c54dd')} onClick={this.navigateToMenu}>\r\n                Menu\r\n            </Button>\r\n            <div style={{\r\n                width: '50%',\r\n                height: '50%',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}>\r\n                {this.renderAssetSearch(AssetsManager.getSuggestions(), 'Suggestions')}\r\n            </div>\r\n            <div  style={{\r\n                position: 'fixed',\r\n                bottom: '77px',\r\n                right: '120px'\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor : '#f50404'}}\r\n                    onClick={event => this.handleSuggestion(false)}\r\n                >\r\n                    Reject\r\n                </Button>\r\n            </div>\r\n            <div  style={{\r\n                position: 'fixed',\r\n                bottom: '77px',\r\n                right: '20px'\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor : '#0FDC06'}}\r\n                    onClick={event => this.handleSuggestion(true)}\r\n                >\r\n                   Accept\r\n                </Button>\r\n            </div>\r\n            <Copyright />\r\n        </div>\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Route, HashRouter} from 'react-router-dom';\r\nimport Checkout from './Configuration/Checkout';\r\nimport BlindtestGenerator from \"./Session/BlindtestGenerator\";\r\nimport HomePage from \"./Home/HomePage\";\r\nimport ContributorsPage from \"./Home/ContributorsPage\";\r\nimport AssetsPage from \"./Home/AssetsPage\";\r\nimport SuggestPage from \"./Home/SuggestPage\";\r\nimport AdminSuggestionPage from \"./Home/AdminSuggestionPage\";\r\n\r\nclass RoutingConfig extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter basename='/'>\r\n                <div>\r\n                    <Route exact path=\"/\" component={HomePage}/>\r\n                    <Route exact path=\"/checkout\" component={Checkout}/>\r\n                    <Route exact path=\"/contributors\" component={ContributorsPage}/>\r\n                    <Route exact path=\"/assets\" component={AssetsPage}/>\r\n                    <Route exact path=\"/assets/suggest\" component={SuggestPage}/>\r\n                    <Route exact path=\"/blindtest\" component={BlindtestGenerator}/>\r\n                    <Route exact path=\"/admin/suggestions\" component={AdminSuggestionPage}/>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoutingConfig;","import './App.css';\r\nimport React from \"react\";\r\nimport RoutingConfig from \"./RoutingConfig\";\r\n\r\nfunction App() {\r\n  //Setting up default Values\r\n  window.localStorage.setItem('theme', 'games')\r\n  window.localStorage.setItem('playlist_size', '100')\r\n  window.localStorage.setItem('guess_time', '13')\r\n  window.localStorage.setItem('wait_time', '5')\r\n  window.localStorage.setItem('allow_same_licence', 'false')\r\n\r\n  return (<RoutingConfig />);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}